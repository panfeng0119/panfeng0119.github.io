<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Pan Feng&#39;s Blog</title>
    <link>http://panfeng0119.github.io/post/</link>
    <description>Recent content in Posts on Pan Feng&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 24 Dec 2018 17:00:00 +0800</lastBuildDate>
    
	<atom:link href="http://panfeng0119.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>LeetCode 刷题笔记04</title>
      <link>http://panfeng0119.github.io/post/leetcode/leetcode-004/</link>
      <pubDate>Mon, 24 Dec 2018 17:00:00 +0800</pubDate>
      
      <guid>http://panfeng0119.github.io/post/leetcode/leetcode-004/</guid>
      <description>链接：leetcode 4. Median of Two Sorted Arrays 难度：💔💔💔💔💔 There are two sorted arrays nums1 and nums2 of size m and n respectively. Find the median of the two sorted arrays. The overall run time complexity should be O(log (m+n)). You may assume nums1 and nums2 cannot be both empty. 1 2 3 4</description>
    </item>
    
    <item>
      <title>LeetCode 刷题笔记03</title>
      <link>http://panfeng0119.github.io/post/leetcode/leetcode-003/</link>
      <pubDate>Mon, 24 Dec 2018 16:00:00 +0800</pubDate>
      
      <guid>http://panfeng0119.github.io/post/leetcode/leetcode-003/</guid>
      <description>链接：leetcode 3. 最大非重复子串（Longest Substring Without Repeating Characters） 难度：💔💔💔 Given a string, find the length of the longest substring without repeating characters. 1 2 3 4 5 Example 1: Input: &amp;#34;abcabcbb&amp;#34; Output:</description>
    </item>
    
    <item>
      <title>LeetCode 刷题笔记02</title>
      <link>http://panfeng0119.github.io/post/leetcode/leetcode-002/</link>
      <pubDate>Mon, 24 Dec 2018 13:00:00 +0800</pubDate>
      
      <guid>http://panfeng0119.github.io/post/leetcode/leetcode-002/</guid>
      <description>链接：leetcode 2. 结构体数字求和（Add Two Numbers） 难度：💔💔💔 You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order and each of their nodes contain a single digit. Add the two numbers and</description>
    </item>
    
    <item>
      <title>Hugo 03 | Hugo 查询顺序</title>
      <link>http://panfeng0119.github.io/post/hugo/hugo03-2018-12-23-lookup/</link>
      <pubDate>Sun, 23 Dec 2018 18:31:00 +0800</pubDate>
      
      <guid>http://panfeng0119.github.io/post/hugo/hugo03-2018-12-23-lookup/</guid>
      <description>Hugo 使用Go的 html/template 和 text/template. 详情请看Go docs. 基本语法 Basic Syntax 模板主要由 variables 和 functions组成，在 {{ }} 内中使用 访问变量 1 2 3 4 5 // 可以是当前作用域中已存在</description>
    </item>
    
    <item>
      <title>Hugo Mathjax 渲染问题</title>
      <link>http://panfeng0119.github.io/post/hugo/hugo-2018-12-22-mathjax-problem/</link>
      <pubDate>Sun, 23 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>http://panfeng0119.github.io/post/hugo/hugo-2018-12-22-mathjax-problem/</guid>
      <description>原文地址 markdown 在 hugo 中默认是没有公式渲染的，需要引入 Mathjax 模块。 方案 在 layouts/partials/ 目录下，把所有和公式有关的修改都写在一个文件中，然后在适当的位置调用 步骤1 创建</description>
    </item>
    
    <item>
      <title>概率论基础01</title>
      <link>http://panfeng0119.github.io/post/mathematic/2018-12-23-math/</link>
      <pubDate>Sun, 23 Dec 2018 00:00:00 +0800</pubDate>
      
      <guid>http://panfeng0119.github.io/post/mathematic/2018-12-23-math/</guid>
      <description>原文连接 1.2 概率论回顾 概率，又称或然率、机会率、机率（几率）或可能性，是概率论的基本概念。概率是对随机事件发生的可能性的度量，一般以一个在0到</description>
    </item>
    
    <item>
      <title>Hugo 02 | Hugo 模板介绍</title>
      <link>http://panfeng0119.github.io/post/hugo/hugo02-2018-09-28-template/</link>
      <pubDate>Fri, 28 Sep 2018 23:59:00 +0800</pubDate>
      
      <guid>http://panfeng0119.github.io/post/hugo/hugo02-2018-09-28-template/</guid>
      <description>Hugo 使用Go的 html/template 和 text/template. 详情请看Go docs. 基本语法 Basic Syntax 模板主要由 variables 和 functions组成，在 {{ }} 内中使用 访问变量 1 2 3 4 5 // 可以是当前作用域中已存在</description>
    </item>
    
    <item>
      <title>Hugo 01 | Documentation</title>
      <link>http://panfeng0119.github.io/post/hugo/hugo01-2018-09-28-documentation/</link>
      <pubDate>Fri, 28 Sep 2018 00:00:00 +0800</pubDate>
      
      <guid>http://panfeng0119.github.io/post/hugo/hugo01-2018-09-28-documentation/</guid>
      <description>CONTENT MANAGEMENT Introduction to Hugo Templating Hugo 使用Go语言的 html/template and text/template 库作为模板. Content Organization Hugo认为相同的结构体用来组织源内容，同样用来渲染站点。 Hugo&amp;rsquo;s Lookup Order Hugo searches for the layout to use for a given page in a</description>
    </item>
    
    <item>
      <title>Go 设计模式原则</title>
      <link>http://panfeng0119.github.io/post/design-pattern/designpattern-2018-09-26-principle/</link>
      <pubDate>Wed, 26 Sep 2018 00:13:42 +0800</pubDate>
      
      <guid>http://panfeng0119.github.io/post/design-pattern/designpattern-2018-09-26-principle/</guid>
      <description>设计模式的六大原则 原文 1、开闭原则（Open Close Principle） 对扩展开放，对修改关闭。 在程序需要进行拓展的时候，不能去修改原有的代码，实</description>
    </item>
    
    <item>
      <title>设计模式：工厂模式（Factory Pattern）</title>
      <link>http://panfeng0119.github.io/post/design-pattern/designpattern-2018-09-26-factory/</link>
      <pubDate>Wed, 26 Sep 2018 00:00:00 +0800</pubDate>
      
      <guid>http://panfeng0119.github.io/post/design-pattern/designpattern-2018-09-26-factory/</guid>
      <description>工厂模式（Factory Pattern） 类型 创建型模式 提供了一种创建对象的最佳方式 意图：定义一个接口，让其子类自己决定实例化哪一个工厂类，工</description>
    </item>
    
  </channel>
</rss>