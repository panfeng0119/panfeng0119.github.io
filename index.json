[{"authors":["潘峰"],"categories":null,"content":" 完整内容请参阅 Hosting \u0026amp; Deployment.\n我们可以将 Hugo 生成的站点托管在 GitHub Pages 上，并使用简单的shell脚本自动完成整个过程。假设您已完成：\n 已安装 Git 版本 2.8 以上. 需要发布的Hugo网站，起码已完成快速入门. 在 GitHub 中创建好了仓库: \u0026lt;USERNAME\u0026gt;.github.io.  准备工作 不同的仓库类型，需要托管的分支是不同的。具体描述，请参阅文档 GitHub Pages doc，以确定您要创建哪种类型的站点.\n从逻辑上，常用两种类型的仓库，对应的分支为\n   https://github.com/\u0026lt;USERNAME\u0026gt;/\u0026lt;USERNAME\u0026gt;.github.io https://\u0026lt;USERNAME\u0026gt;.github.io     网站分支 -\u0026gt; gh-pages 网站分支 -\u0026gt; master   源码分支 -\u0026gt; 任意  源码分支 -\u0026gt; 任意    我们用第二种类型，需要注意两点：\n \u0008仓库名必须用\u0026lt;USERNAME\u0026gt;.github.io  网站内容必须存放在 master 分支  一、通过两个仓库来创建 GitHub Pages 最简单的方法就是将 Hugo 文件和生成的内容分别发布到两个不同的仓库(Repositoriy)中。\n 创建两个仓库  一个存放源码的仓库： \u0026lt;YOUR-PROJECT\u0026gt; （如：blog）  一个托管Hugo网站的仓库： \u0026lt;USERNAME\u0026gt;.github.io  克隆源码仓库到本地  git clone \u0026lt;OUR-PROJECT-URL\u0026gt;  cd \u0026lt;YOUR-PROJECT\u0026gt;  启动网站服务，确保网站能正常运行  hugo server  访问网站 http://localhost:1313 创建 git 子模块，命名为 public （用来托管网站）  git submodule add -b master git@github.com:\u0026lt;USERNAME\u0026gt;/\u0026lt;USERNAME\u0026gt;.github.io.git public public 运行脚本，将网站 push 到\u0026lt;USERNAME\u0026gt;.github.io  chmod +x deploy.sh ./deploy.sh\u0026rdquo;提交消息(可选)\u0026rdquo;  将源代码 push 到 \u0026lt;YOUR-PROJECT\u0026gt;  #!/bin/bash # 文件名：deploy.sh echo -e \u0026quot;\\033[0;32mDeploying updates to GitHub...\\033[0m\u0026quot; Date=`date \u0026quot;+%Y-%m-%d %H:%M:%S\u0026quot;` # Build the project. hugo # Go To Public folder cd public # Add changes to git. git add -A # Commit changes. msg=\u0026quot;rebuilding site ${Date}\u0026quot; if [ $# -eq 1 ] then msg=\u0026quot;$1\u0026quot; fi git commit -m \u0026quot;$msg\u0026quot; # Push source and build repos. git push origin master # Come Back up to the Project Root cd ..  现在！您的个人页面成功地部署在 https://\u0026lt;USERNAME\u0026gt;.github.io\n补充：如果需要指定 Hugo 生成网站的输出目录，可以在配置文件中 config.toml 中设置变量 publishDir = \"docs\". \n二、通过两个分支来创建 GitHub Pages 我们还可以指定默认分支来托管源代码，并将发布的站点指向单独的分支，虽然比上面的方法复杂，但他的优点在于：\n 只用一个仓库，方便维护和版本控制 直接使用默认的 public 目录，不必指定 Git 子模块或输出目录  我们需要到仓库中新建一个托管源代码的分支，并设置为默认分支（非 master 分支），设置方法如下\n 进入仓库 https://\u0026lt;USERNAME\u0026gt;.github.io ，点击导航栏的设置 Settings\n 在左侧 Options 找到 Branches\n Default branch 选择源码托管的分支 （如 hugo）\n  2.1 初始化 接下来的步骤在每次 clone 下来后只需要完成一次。默认的 （upstream 的名称 origin （upstream 是远程仓库在本地的简写名称，可以通过 git remote -v 来查看 ）\n现在，我们用 https://\u0026lt;USERNAME\u0026gt;.github.io 仓库，源码分支为 hugo ，发布网站的分支为 master\n 克隆仓库到本地，默认分支是 hugo  git clone \u0026lt;Repositoriy-URL\u0026gt;  cd \u0026lt;Repositoriy\u0026gt;  切换到 master 分支，进行设置  git checkout master  git reset \u0026ndash;hard  git commit \u0026ndash;allow-empty -m \u0026ldquo;Initializing master branch\u0026rdquo;  git push origin master git checkout master  切换到 hugo 分支 echo public \u0026gt;\u0026gt; .gitignore  rm -rf public rm -rf .git/worktrees/public/\u0026rdquo;  git worktree add -B master public origin/master \n  2.2 启动服务并push到分支 现在我们只需要启动服务，检查网站正常运行，就可以通过脚本来push了 （脚本需要 chmod +x deploy.sh）\n#!/bin/bash # 文件名：deploy.sh # 脚本：自动将public文件夹push到master分支 # 如果是用 gh-branch，将 master 替换为 gh-branch 就可以 # 日志信息 Date=`date \u0026quot;+%Y-%m-%d %H:%M:%S\u0026quot;` alias printlog='echo ${Date} INFO' # 标记当前路径 DIR=`pwd` printlog \u0026quot;当前目录：${DIR}\u0026quot; printlog \u0026quot;标记 public 文件夹为 master 分支\u0026quot; rm -rf public rm -rf .git/worktrees/public/ git worktree add -B master public origin/master # 清除原来的内容 rm -rf public/* # 编译 printlog \u0026quot;正在生成网站.\u0026quot; hugo printlog \u0026quot;正在提交更新\u0026quot; msg=\u0026quot;Rebuilding site ${Date} (publish.sh)\u0026quot; # 提交 cd public \u0026amp;\u0026amp; git add --all \u0026amp;\u0026amp; git commit -m \u0026quot;${msg}\u0026quot; printlog \u0026quot;正在 push\u0026quot; git push origin master printlog \u0026quot;Down!\u0026quot;  附录 知识点：\ngit worktree\n利用 upstream 标记更多的远程仓库地址\n脚本中获取相对路径 DIR=$(dirname \u0026ldquo;$0\u0026rdquo;)\n","date":1536940800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1537004134,"objectID":"b3483db181a3c1d5a490cb10d825d936","permalink":"panfeng0119.github.io/post/host_on_github/","publishdate":"2018-09-15T00:00:00+08:00","relpermalink":"panfeng0119.github.io/post/host_on_github/","section":"post","summary":"在 GitHub 上部署个人网站有两种方式，一种是利用两个仓库，一种是用两个分支...","tags":["GitHub Pages"],"title":"Hugo + GitHub 部署个人站点","type":"post"},{"authors":["潘峰"],"categories":null,"content":" CONTENT MANAGEMENT\nPage Resources ResourceType The main type of the resource. For example, a file of MIME type image/jpg has for ResourceType image. Name Default value is the filename (relative to the owning page). Can be set in front matter. Title Default blank. Can be set in front matter. Permalink The absolute URL to the resource. Resources of type page will have no value. RelPermalink The relative URL to the resource. Resources of type page will have no value.\n","date":1536854400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1536981337,"objectID":"a1fe1aa2dcdceba89e6b27f2b7c7c70e","permalink":"panfeng0119.github.io/post/pagesource/","publishdate":"2018-09-14T00:00:00+08:00","relpermalink":"panfeng0119.github.io/post/pagesource/","section":"post","summary":"Create a beautifully simple website or blog in under 10 minutes.","tags":["Academic"],"title":"Page Resources","type":"post"},{"authors":["Academic"],"categories":null,"content":" Hugo 主题: Academic Academic 是一个框架，它可以帮助你迅速创建漂亮的网站. 适用于个人站点、博客或商业/项目网站. 不超过10分钟即可浏览最新的演示. 然后跳转到 快速入门指南 或者查看发行说明.\n\n主要特征:\n 轻松管理各种内容，包括主页，博客文章，出版物，讲座和项目 通过 color themes 和 widgets/plugins 进行扩展 通过 Markdown 来进行编写，以便于格式化和代码高亮, 还可以用 LaTeX 来编写数学表达式 Social/academic 网络链接, Google Analytics, and Disqus 评论 响应和移动友好 单页、简单而清爽 多语言、易于定制  Color Themes Academic 有不同的颜色主题和字体主题.\n   默认 ocean dark              forest coffee + playfair font 1950s           Install 您可以选择以下四种方法之一进行安装:\n one-click install using your web browser (recommended) install on your computer using Git with the Command Prompt/Terminal app install on your computer by downloading the ZIP files install on your computer with RStudio  使用浏览器  Install Academic with Netlify  Netlify will provide you with a customizable URL to access your new site  On GitHub, go to your newly created academic-kickstart repository and edit config.toml to personalize your site. Shortly after saving the file, your site will automatically update Read the Quick Start Guide to learn how to add Markdown content. For inspiration, refer to the Markdown content which powers the Demo  使用 Git 要求:\n 下载并安装 Git 下载并安装 Hugo   Fork the Academic Kickstart repository and clone your fork with Git:\ngit clone https://github.com/sourcethemes/academic-kickstart.git My_Website\nNote that if you forked Academic Kickstart, the above command should be edited to clone your fork, i.e. replace sourcethemes with your GitHub username.\n 初始化 academic 主题:\ncd My_Website git submodule update \u0026ndash;init \u0026ndash;recursive\n  通过 ZIP 安装  Download and extract Academic Kickstart Download and extract the Academic theme to the themes/academic/ folder from the above step  使用 RStudio 安装 View the guide to installing Academic with RStudio\nQuick start  If you installed on your computer, view your new website by running the following command:\nhugo server\nNow visit localhost:1313 and your new Academic powered website will appear. Otherwise, if using Netlify, they will provide you with your URL.\n Read the Quick Start Guide to learn how to add Markdown content, customize your site, and deploy it. For inspiration, refer to the Markdown content which powers the Demo\n Build your site by running the hugo command. Then host it for free using Github Pages or Netlify (refer to the first installation method). Alternatively, copy the generated public/ directory (by FTP, Rsync, etc.) to your production web server (such as a university\u0026rsquo;s hosting service).\n  更新 Feel free to star the project on Github to help keep track of updates and check out the release notes prior to updating your site.\nBefore updating the framework, it is recommended to make a backup of your entire website directory (or at least your themes/academic directory) and record your current version number.\nBy default, Academic is installed as a Git submodule which can be updated by running the following command:\ngit submodule update --remote --merge  Check out the update guide for full instructions and alternative methods.\n反馈 \u0026amp; 贡献 Please use the issue tracker to let me know about any bugs or feature requests, or alternatively make a pull request.\nFor support, head over to the Hugo discussion forum.\nLicense Copyright 2016-present George Cushen.\nReleased under the MIT license.\n\n","date":1535731200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1535731200,"objectID":"7d5f0fd1f6cb035c6621f8781d801fa2","permalink":"panfeng0119.github.io/publication/aboutacademic/","publishdate":"2018-09-01T00:00:00+08:00","relpermalink":"panfeng0119.github.io/publication/aboutacademic/","section":"publication","summary":"Hugo 主题: Academic Academic 是一个框架，它可以帮助你迅速创建漂亮的网站. 适用于个人站点、博客或商业/项目网站. 不超过10分钟即可浏览最新的演示. 然后跳转到 快","tags":[],"title":"Hugo 主题: Academic","type":"publication"},{"authors":null,"categories":null,"content":"Embed your slides or video here using shortcodes. Further details can easily be added using Markdown and $\\rm \\LaTeX$ math code.\n","date":1483200000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1536739986,"objectID":"cd6d9d084287506b4668ad90c6aff50a","permalink":"panfeng0119.github.io/talk/example-talk/","publishdate":"2017-01-01T00:00:00+08:00","relpermalink":"panfeng0119.github.io/talk/example-talk/","section":"talk","summary":"Embed your slides or video here using shortcodes. Further details can easily be added using Markdown and $\\rm \\LaTeX$ math code.","tags":[],"title":"Example Talk","type":"talk"},{"authors":null,"categories":null,"content":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\n","date":1461686400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1537004776,"objectID":"80be3c9fcc86014efab0cec0f14957f6","permalink":"panfeng0119.github.io/project/deep-learning/","publishdate":"2016-04-27T00:00:00+08:00","relpermalink":"panfeng0119.github.io/project/deep-learning/","section":"project","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit.","tags":["Deep Learning"],"title":"example - Deep Learning","type":"project"}]