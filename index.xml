<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Pan Feng&#39;s Blog</title>
    <link>http://panfeng0119.github.io/</link>
    <description>Recent content on Pan Feng&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 23 Dec 2018 18:31:00 +0800</lastBuildDate>
    
        <atom:link href="http://panfeng0119.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Hugo 03 | Hugo 查询顺序</title>
      <link>http://panfeng0119.github.io/post/hugo/hugo03-2018-12-23-lookup/</link>
      <pubDate>Sun, 23 Dec 2018 18:31:00 +0800</pubDate>
      
      <guid>http://panfeng0119.github.io/post/hugo/hugo03-2018-12-23-lookup/</guid>
      
        <description>

&lt;p&gt;Hugo 使用Go的 html/template 和 text/template. 详情请看&lt;a href=&#34;http://golang.org/pkg/html/template/&#34;&gt;Go docs&lt;/a&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;基本语法-basic-syntax&#34;&gt;&lt;strong&gt;基本语法 Basic Syntax&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;模板主要由 &lt;code&gt;variables&lt;/code&gt; 和 &lt;code&gt;functions&lt;/code&gt;组成，在 &lt;code&gt;{{ }}&lt;/code&gt; 内中使用&lt;/p&gt;

&lt;p&gt;访问变量&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;// 可以是当前作用域中已存在的变量
{{ .Title }}

// 或者自定义变量
{{ $address }}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;函数参数用空格分割&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;{{ FUNCTION ARG1 ARG2 .. }}

// 例如
{{ add 1 2 }}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;方法调用&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;// 方法和字段用&amp;#34;.&amp;#34;来访问
{{ .Params.bar }}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;用括号组织&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;{{ if or (isset .Params &amp;#34;alt&amp;#34;) (isset .Params &amp;#34;caption&amp;#34;) }} Caption {{ end }}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;变量&#34;&gt;&lt;strong&gt;变量&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;每个Go Template都会获取一个data对象。而在Hugo中，每个Template都传递一个Page&lt;/p&gt;

&lt;p&gt;&lt;code&gt;.Title&lt;/code&gt; 就是 &lt;a href=&#34;https://gohugo.io/variables/page/&#34;&gt;&lt;code&gt;Page&lt;/code&gt;&lt;/a&gt; 变量中可访问的元素之一，通过 &amp;ldquo;.&amp;rdquo; 访问：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&amp;lt;title&amp;gt;{{ .Title }}&amp;lt;/title&amp;gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;变量赋值&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;{{ $address := &amp;#34;123 Main St.&amp;#34; }}
{{ $address }}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;em&gt;下面的示例仅适用于 Hugov0.48 或更新的版本&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;在主页上打印“Var is Hugo Home”，在所有其他页面上打印“Var is Hugo Page”：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;{{ $var := &amp;#34;Hugo Page&amp;#34; }}
{{ if .IsHome }}
    {{ $var = &amp;#34;Hugo Home&amp;#34; }}
{{ end }}
Var is {{ $var }}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;函数&#34;&gt;&lt;strong&gt;函数&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;Hugo Template 的&lt;a href=&#34;https://gohugo.io/functions/&#34;&gt;自带函数&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;新的函数需要编译后才能使用&lt;/p&gt;

&lt;p&gt;Example 1: Adding Numbers&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;{{ add 1 2 }}
&amp;lt;!-- prints 3 --&amp;gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Example 2: Comparing Numbers&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;{{ lt 1 2 }}
&amp;lt;!-- prints true (i.e., since 1 is less than 2) --&amp;gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;这两个示例都使用了 &lt;a href=&#34;https://gohugo.io/functions/math/&#34;&gt;math functions&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;includes&#34;&gt;&lt;strong&gt;Includes&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;模板的位置从 &lt;code&gt;layouts/&lt;/code&gt; 目录开始&lt;/p&gt;

&lt;h2 id=&#34;partial-函数&#34;&gt;&lt;strong&gt;Partial 函数&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;用来调用 partial templates&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;// 使用方法
{{ partial &amp;#34;&amp;lt;PATH&amp;gt;/&amp;lt;PARTIAL&amp;gt;.&amp;lt;EXTENSION&amp;gt;&amp;#34; . }}

// 例如:  调用 layouts/partials/header.html partial
{{ partial &amp;#34;header.html&amp;#34; . }}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;template-函数&#34;&gt;&lt;strong&gt;Template 函数&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;仅用于调用 &lt;a href=&#34;https://gohugo.io/templates/internal/&#34;&gt;internal templates&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;可用模板在&lt;a href=&#34;https://github.com/gohugoio/hugo/tree/master/tpl/tplimpl/embedded/templates&#34;&gt;这里&lt;/a&gt;找&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;// 语法为
{{template“_internal / &amp;lt;TEMPLATE&amp;gt;.&amp;lt;EXTENSION&amp;gt;”. }}

// 例如： 调用 internal opengraph.html template:
{{ template &amp;#34;_internal/opengraph.html&amp;#34; . }}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;逻辑&#34;&gt;&lt;strong&gt;逻辑&lt;/strong&gt;&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;// Example 1: Using Context (.) 
{{ range $array }}
    {{ . }} &amp;lt;!--  . 表示 $array 中的一个元素 --&amp;gt;
{{ end }}

// Example 2: 给元素声明一个变量名
{{ range $elem_val := $array }}
    {{ $elem_val }}
{{ end }}

// Example 3: array 和 slice 的索引和变量
{{ range $elem_index, $elem_val := $array }}
   {{ $elem_index }} -- {{ $elem_val }}
{{ end }}
// Example 4: map 的 key 和 value
{{ range $elem_key, $elem_val := $map }}
   {{ $elem_key }} -- {{ $elem_val }}
{{ end }}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;条件语句&#34;&gt;&lt;strong&gt;条件语句&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;每个语句用 &lt;code&gt;{{ end }}&lt;/code&gt; 结束&lt;/p&gt;

&lt;p&gt;可以用到的关键字：&lt;code&gt;if&lt;/code&gt;, &lt;code&gt;else&lt;/code&gt;, &lt;code&gt;with&lt;/code&gt;, &lt;code&gt;or&lt;/code&gt;, &lt;code&gt;and&lt;/code&gt;, &lt;code&gt;range&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;作为 false 的值可以是：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;false (boolean)&lt;/li&gt;
&lt;li&gt;0 (integer)&lt;/li&gt;
&lt;li&gt;任何 zero-length array, slice, map, 或者 string&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;example-1-with&#34;&gt;Example 1: with&lt;/h3&gt;

&lt;p&gt;功能：如果变量存在，则&amp;hellip;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;// 如果变量不存在，或判定为 false 则跳过
{{ with .Params.title }}
    &amp;lt;h4&amp;gt;{{ . }}&amp;lt;/h4&amp;gt;
{{ end }}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h3 id=&#34;example-2-with-else&#34;&gt;Example 2: with .. else&lt;/h3&gt;

&lt;p&gt;如果设置了参数 &lt;code&gt;“description”&lt;/code&gt; 的值，执行&lt;code&gt;.&lt;/code&gt;命令&lt;/p&gt;

&lt;p&gt;否则使用&lt;code&gt;.Summary&lt;/code&gt;的变量值&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;{{ with .Param &amp;#34;description&amp;#34; }}
    {{ . }}
{{ else }}
    {{ .Summary }}
{{ end }}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h3 id=&#34;example-3-if&#34;&gt;Example 3: if&lt;/h3&gt;

&lt;p&gt;一种更长（冗余）的写法是用if，下面给出Example1重写的代码&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;{{ if isset .Params &amp;#34;title&amp;#34; }}
    &amp;lt;h4&amp;gt;{{ index .Params &amp;#34;title&amp;#34; }}&amp;lt;/h4&amp;gt;
{{ end }}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h3 id=&#34;example-4-if-else&#34;&gt;Example 4: if .. else&lt;/h3&gt;

&lt;p&gt;Below example is “Example 2” rewritten using if .. else, and using isset function + .Params variable (different from the .Param function) instead:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;{{ if (isset .Params &amp;#34;description&amp;#34;) }}
    {{ index .Params &amp;#34;description&amp;#34; }}
{{ else }}
    {{ .Summary }}
{{ end }}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Example 5: if .. else if .. else
Unlike with, if can contain else if clauses too.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;{{ if (isset .Params &amp;#34;description&amp;#34;) }}
    {{ index .Params &amp;#34;description&amp;#34; }}
{{ else if (isset .Params &amp;#34;summary&amp;#34;) }}
    {{ index .Params &amp;#34;summary&amp;#34; }}
{{ else }}
    {{ .Summary }}
{{ end }}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h3 id=&#34;example-6-and-or&#34;&gt;Example 6: and &amp;amp; or&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;{{ if (and (or (isset .Params &amp;#34;title&amp;#34;) (isset .Params &amp;#34;caption&amp;#34;)) (isset .Params &amp;#34;attr&amp;#34;)) }}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;未完待续&lt;/p&gt;

&lt;h2 id=&#34;管道符号-pipes&#34;&gt;&lt;strong&gt;管道符号（Pipes）&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;概念：每个管道（pipe）的输出都成为后续管道的输入&lt;/p&gt;

&lt;p&gt;限制：只能使用一个值作为传递参数&lt;/p&gt;

&lt;h3 id=&#34;example-1-shuffle&#34;&gt;Example 1: shuffle&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;//两条语句功能一样
{{ shuffle (seq 1 5) }}
{{ (seq 1 5) | shuffle }}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h3 id=&#34;example-2-index&#34;&gt;Example 2: index&lt;/h3&gt;

&lt;p&gt;以下访问名为“disqus_url”的页面参数并转义HTML。此示例还使用index函数，(内置在 Go Templates中)：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;{{ index .Params &amp;#34;disqus_url&amp;#34; | html }}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h3 id=&#34;example-3-or-with-isset&#34;&gt;Example 3: or with isset&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;{{ if or (or (isset .Params &amp;#34;title&amp;#34;) (isset .Params &amp;#34;caption&amp;#34;)) (isset .Params &amp;#34;attr&amp;#34;) }}
Stuff Here
{{ end }}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;改写为&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;{{ if isset .Params &amp;#34;caption&amp;#34; | or isset .Params &amp;#34;title&amp;#34; | or isset .Params &amp;#34;attr&amp;#34; }}
Stuff Here
{{ end }}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h3 id=&#34;example-4-internet-explorer-conditional-comments&#34;&gt;Example 4: Internet Explorer Conditional Comments&lt;/h3&gt;

&lt;p&gt;Go Templates 默认会删除HTML注释&lt;/p&gt;

&lt;p&gt;这有不幸的副作用是删除Internet Explorer条件注释。作为解决办法：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;{{ &amp;#34;&amp;lt;!--[if lt IE 9]&amp;gt;&amp;#34; | safeHTML }}
  &amp;lt;script src=&amp;#34;html5shiv.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt;
{{ &amp;#34;&amp;lt;![endif]--&amp;gt;&amp;#34; | safeHTML }}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;或者使用反勾号（`）来引用IE条件注释，避免转义内部每个双引号（&amp;rdquo;）的繁琐任务&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;{{ `&amp;lt;!--[if lt IE 7]&amp;gt;&amp;lt;html class=&amp;#34;no-js lt-ie9 lt-ie8 lt-ie7&amp;#34;&amp;gt;&amp;lt;![endif]--&amp;gt;` | safeHTML }}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr /&gt;

&lt;h2 id=&#34;context-aka-the-dot&#34;&gt;&lt;strong&gt;Context (aka “the dot”)&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;在最顶层，这是可用的数据集合
在迭代循环内，它具有当前值（.在循环内不会引用整个页面的数据）
如果需要访问页面数据，有以下方法&lt;/p&gt;

&lt;h3 id=&#34;1-定义一个变量&#34;&gt;1.定义一个变量&lt;/h3&gt;

&lt;p&gt;下面展示了如何定义变量&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;//tags-range-with-page-variable.html

{{ $title := .Site.Title }}
&amp;lt;ul&amp;gt;
{{ range .Params.tags }}
    &amp;lt;li&amp;gt;
        &amp;lt;a href=&amp;#34;/tags/{{ . | urlize }}&amp;#34;&amp;gt;{{ . }}&amp;lt;/a&amp;gt;
        - {{ $title }}
    &amp;lt;/li&amp;gt;
{{ end }}
&amp;lt;/ul&amp;gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;注意: 一旦我们进入循环（如 range），值{{.}}已更改。
由于已经在循环外部定义了一个变量（{{$title}}），并分配了一个值，因此我们也可以从循环内部访问该值。&lt;/p&gt;

&lt;h3 id=&#34;2-使用全局变量参数&#34;&gt;2.使用全局变量参数 $.&lt;/h3&gt;

&lt;p&gt;$.可以从任何地方访问全局上下文。&lt;/p&gt;

&lt;p&gt;使用$从全局上下文中获取.Site.Title：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;//range-through-tags-w-global.html

&amp;lt;ul&amp;gt;
{{ range .Params.tags }}
  &amp;lt;li&amp;gt;
    &amp;lt;a href=&amp;#34;/tags/{{ . | urlize }}&amp;#34;&amp;gt;{{ . }}&amp;lt;/a&amp;gt;
            - {{ $.Site.Title }}
  &amp;lt;/li&amp;gt;
{{ end }}
&amp;lt;/ul&amp;gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;如果重定义&lt;code&gt;$&lt;/code&gt;, &lt;code&gt;{{$：=.Site}}&lt;/code&gt;, 那么内置的&lt;code&gt;$&lt;/code&gt;将停止工作。您可以通过使用&lt;code&gt;{{$: =.}}&lt;/code&gt; 来将&lt;code&gt;$&lt;/code&gt;重置为其默认值。&lt;/p&gt;

&lt;h2 id=&#34;空白-whitespace&#34;&gt;&lt;strong&gt;空白（Whitespace）&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;使用连字符（hyphen, &amp;ldquo;-&amp;ldquo;）可以去掉空白（类似 trim），如&lt;code&gt;{{- XXXX -}}&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;可以去掉的有：
- 空格 （space）
- 当前行的Tab（horizontal tab）
- 回车（carriage return）
- 换行符 （newline）&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&amp;lt;div&amp;gt;
  {{ .Title }}
&amp;lt;/div&amp;gt;
&amp;lt;div&amp;gt;
  {{- .Title -}}
&amp;lt;/div&amp;gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;输出:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&amp;lt;div&amp;gt;
  Hello, World!
&amp;lt;/div&amp;gt;
&amp;lt;div&amp;gt;Hello, World!&amp;lt;/div&amp;gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;注释-comments&#34;&gt;&lt;strong&gt;注释（Comments）&lt;/strong&gt;&lt;/h2&gt;

&lt;h3 id=&#34;go-templates-的注释&#34;&gt;Go Templates 的注释&lt;/h3&gt;

&lt;p&gt;注释块用 &lt;code&gt;{{/*&lt;/code&gt; 和 &lt;code&gt;*/}}&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;html-注释&#34;&gt;HTML 注释&lt;/h3&gt;

&lt;p&gt;注释用 &lt;code&gt;&amp;lt;!--xxx --&amp;gt;&lt;/code&gt;
如果需要构造 html 注释块，可以用管道符导入到safeHTML&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;{{ printf &amp;#34;&amp;lt;!-- Our website is named: %s --&amp;gt;&amp;#34; .Site.Title | safeHTML }}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h3 id=&#34;包含go模板的html注释&#34;&gt;包含Go模板的HTML注释&lt;/h3&gt;

&lt;p&gt;不要用 HTML 注释来注释 GO 模板
引擎默认先编译 Go 模板代码，如果HTML注释中代码出错，编译就会失败。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&amp;lt;!-- {{ $author := &amp;#34;Emma Goldman&amp;#34; }} was a great woman. --&amp;gt;
{{ $author }}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;hugo-parameters&#34;&gt;&lt;strong&gt;Hugo Parameters&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;网页范围的参数配置，通过特定的内容片断来指定一些特定的渲染（如当前网站不需要用到的）传递到模板中&lt;/p&gt;

&lt;p&gt;You can define any values of any type and use them however you want in your templates, as long as the values are supported by the front matter format specified via metaDataFormat in your configuration file.&lt;/p&gt;

&lt;p&gt;您可以定义任何类型的值，并在模板中根据需要使用它们，只要这些值由配置文件中通过metaDataFormat指定的前置事项格式支持。&lt;/p&gt;

&lt;h3 id=&#34;使用content-page-参数&#34;&gt;使用Content (Page) 参数&lt;/h3&gt;

&lt;p&gt;全局都使用变量 notoc ，但有时我们不需要内容表。此时，我们在文件头设置为true，它将阻止内容表呈现。&lt;/p&gt;

&lt;p&gt;Here is the example front matter (YAML):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;---
title: Roadmap
lastmod: 2017-03-05
date: 2013-11-18
notoc: true
---&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;对应的模板中要加上处理的代码&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;//layouts/partials/toc.html

{{ if not .Params.notoc }}
&amp;lt;aside&amp;gt;
  &amp;lt;header&amp;gt;
    &amp;lt;a href=&amp;#34;#{{.Title | urlize}}&amp;#34;&amp;gt;
    &amp;lt;h3&amp;gt;{{.Title}}&amp;lt;/h3&amp;gt;
    &amp;lt;/a&amp;gt;
  &amp;lt;/header&amp;gt;
  {{.TableOfContents}}
&amp;lt;/aside&amp;gt;
&amp;lt;a href=&amp;#34;#&amp;#34; id=&amp;#34;toc-toggle&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;
{{ end }}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;We want the default behavior to be for pages to include a TOC unless otherwise specified. This template checks to make sure that the notoc: field in this page’s front matter is not true.
我们希望页面的默认行为包括TOC，除非另有指定。此模板检查以确保此页’s前端中的notoc:字段不正确。&lt;/p&gt;

&lt;h3 id=&#34;使用-全局参数-来判断代码块是否执行&#34;&gt;使用 全局参数 来判断代码块是否执行&lt;/h3&gt;

&lt;p&gt;这些参数在模板中是全局可用的。&lt;/p&gt;

&lt;p&gt;如：版权copyrighthtml这个内容，需要在全局使用&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;[params]
  copyrighthtml = &amp;#34;Copyright &amp;amp;#xA9; 2017 John Doe. All Rights Reserved.&amp;#34;
  sidebarrecentlimit = 5
  twitteruser = &amp;#34;spf13&amp;#34;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;然后，在页脚中声明一个&lt;code&gt;&amp;lt;footer&amp;gt;&lt;/code&gt;，只有当提供了copyrightml参数时才会呈现它。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;{{ if .Site.Params.copyrighthtml }}
    &amp;lt;footer&amp;gt;
        &amp;lt;div class=&amp;#34;text-center&amp;#34;&amp;gt;{{.Site.Params.CopyrightHTML | safeHTML}}&amp;lt;/div&amp;gt;
    &amp;lt;/footer&amp;gt;
{{ end }}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;或者用 &lt;code&gt;with&lt;/code&gt; 来替换 &lt;code&gt;if&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;// layouts/partials/twitter.html

{{ with .Site.Params.twitteruser }}
    &amp;lt;div&amp;gt;
        &amp;lt;a href=&amp;#34;https://twitter.com/{{.}}&amp;#34; rel=&amp;#34;author&amp;#34;&amp;gt;
        &amp;lt;img src=&amp;#34;/images/twitter.png&amp;#34; width=&amp;#34;48&amp;#34; height=&amp;#34;48&amp;#34; title=&amp;#34;Twitter: {{.}}&amp;#34; alt=&amp;#34;Twitter&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;
    &amp;lt;/div&amp;gt;
{{ end }}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;layout 中可以使用“magic constants”&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&amp;lt;nav&amp;gt;
  &amp;lt;h1&amp;gt;Recent Posts&amp;lt;/h1&amp;gt;
  &amp;lt;ul&amp;gt;
  {{- range first .Site.Params.SidebarRecentLimit .Site.Pages -}}
      &amp;lt;li&amp;gt;&amp;lt;a href=&amp;#34;{{.RelPermalink}}&amp;#34;&amp;gt;{{.Title}}&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
  {{- end -}}
  &amp;lt;/ul&amp;gt;
&amp;lt;/nav&amp;gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h3 id=&#34;example-show-only-upcoming-events-只显示即将发生的事件&#34;&gt;Example: Show Only Upcoming Events 只显示即将发生的事件&lt;/h3&gt;

&lt;p&gt;Go allows you to do more than what’s shown here. Using Hugo’s &lt;code&gt;where function&lt;/code&gt; and Go built-ins, we can list only the items from content/events/ whose date (set in a content file’s front matter) is in the future. The following is an example partial template:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;layouts/partials/upcoming-events.html

&amp;lt;h4&amp;gt;Upcoming Events&amp;lt;/h4&amp;gt;
&amp;lt;ul class=&amp;#34;upcoming-events&amp;#34;&amp;gt;
{{ range where .Pages.ByDate &amp;#34;Section&amp;#34; &amp;#34;events&amp;#34; }}
    {{ if ge .Date.Unix now.Unix }}
        &amp;lt;li&amp;gt;
        &amp;lt;!-- add span for event type --&amp;gt;
          &amp;lt;span&amp;gt;{{ .Type | title }} —&amp;lt;/span&amp;gt;
          {{ .Title }} on
        &amp;lt;!-- add span for event date --&amp;gt;
          &amp;lt;span&amp;gt;{{ .Date.Format &amp;#34;2 January at 3:04pm&amp;#34; }}&amp;lt;/span&amp;gt;
          at {{ .Params.place }}
        &amp;lt;/li&amp;gt;
    {{ end }}
{{ end }}
&amp;lt;/ul&amp;gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://gohugo.io/templates/introduction/#basic-syntax&#34;&gt;https://gohugo.io/templates/introduction/#basic-syntax&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>Hugo Mathjax 渲染问题</title>
      <link>http://panfeng0119.github.io/post/hugo/hugo-2018-12-22-mathjax-problem/</link>
      <pubDate>Sun, 23 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>http://panfeng0119.github.io/post/hugo/hugo-2018-12-22-mathjax-problem/</guid>
      
        <description>

&lt;p&gt;&lt;a href=&#34;http://note.qidong.name/2018/03/hugo-mathjax/&#34;&gt;原文地址&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;markdown 在 hugo 中默认是没有公式渲染的，需要引入 Mathjax 模块。&lt;/p&gt;

&lt;h3 id=&#34;方案&#34;&gt;方案&lt;/h3&gt;

&lt;p&gt;在 layouts/partials/ 目录下，把所有和公式有关的修改都写在一个文件中，然后在适当的位置调用&lt;/p&gt;

&lt;h5 id=&#34;步骤1&#34;&gt;步骤1&lt;/h5&gt;

&lt;p&gt;创建文件 &lt;code&gt;layouts/partials/mathjax.html&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&amp;lt;!-- layouts/partials/mathjax.html --&amp;gt;
&amp;lt;!-- 公式渲染 mathjax --&amp;gt;
&amp;lt;script src=&amp;#34;https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML&amp;#34;&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;!-- 区分行内普通的标记 --&amp;gt;
&amp;lt;script type=&amp;#34;text/x-mathjax-config&amp;#34;&amp;gt;
MathJax.Hub.Config({
    tex2jax: {
        inlineMath: [[&amp;#39;$&amp;#39;,&amp;#39;$&amp;#39;], [&amp;#39;\\(&amp;#39;,&amp;#39;\\)&amp;#39;]],
        displayMath: [[&amp;#39;$$&amp;#39;,&amp;#39;$$&amp;#39;], [&amp;#39;\[&amp;#39;,&amp;#39;\]&amp;#39;]],
        processEscapes: true,
        processEnvironments: true,
        skipTags: [&amp;#39;script&amp;#39;, &amp;#39;noscript&amp;#39;, &amp;#39;style&amp;#39;, &amp;#39;textarea&amp;#39;, &amp;#39;pre&amp;#39;],
        TeX: { equationNumbers: { autoNumber: &amp;#34;AMS&amp;#34; },
                extensions: [&amp;#34;AMSmath.js&amp;#34;, &amp;#34;AMSsymbols.js&amp;#34;] }
    }
});
&amp;lt;/script&amp;gt;
  
&amp;lt;script type=&amp;#34;text/x-mathjax-config&amp;#34;&amp;gt;
    // Fix &amp;lt;code&amp;gt; tags after MathJax finishes running. This is a
    // hack to overcome a shortcoming of Markdown. Discussion at
    // https://github.com/mojombo/jekyll/issues/199
    MathJax.Hub.Queue(() =&amp;gt; {
    MathJax.Hub.getAllJax().map(v =&amp;gt; v.SourceElement().parentNode.className += &amp;#39; has-jax&amp;#39;);
    });
&amp;lt;/script&amp;gt; 

&amp;lt;style&amp;gt;
    code.has-jax {
        font: inherit;
        font-size: 100%;
        background: inherit;
        border: inherit;
        color: #515151;
    }
&amp;lt;/style&amp;gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h5 id=&#34;步骤2&#34;&gt;步骤2&lt;/h5&gt;

&lt;p&gt;在文件 layout/footer.html (&lt;code&gt;&amp;lt;foot&amp;gt;&lt;/code&gt; 或 &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt;都可以)适当位置添加下面代码&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;{{ partial &amp;#34;mathjax.html&amp;#34; . }}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr /&gt;

&lt;h3 id=&#34;代码说明&#34;&gt;代码说明&lt;/h3&gt;

&lt;p&gt;第一块代码是渲染用的主要调用&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&amp;lt;script src=&amp;#34;https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML&amp;#34;&amp;gt;&amp;lt;/script&amp;gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;第二块是对行内代码进行优化&lt;/p&gt;

&lt;p&gt;因为在 markdown 中，对一些特殊字符进行了转义，使MathJax对行内代码渲染无效，因此需要添加下面代码把普通的代码和MathJax代码分开&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&amp;lt;script type=&amp;#34;text/x-mathjax-config&amp;#34;&amp;gt;
MathJax.Hub.Config({
  tex2jax: {
    inlineMath: [[&amp;#39;$&amp;#39;,&amp;#39;$&amp;#39;], [&amp;#39;\\(&amp;#39;,&amp;#39;\\)&amp;#39;]],
    displayMath: [[&amp;#39;$$&amp;#39;,&amp;#39;$$&amp;#39;], [&amp;#39;\[&amp;#39;,&amp;#39;\]&amp;#39;]],
    processEscapes: true,
    processEnvironments: true,
    skipTags: [&amp;#39;script&amp;#39;, &amp;#39;noscript&amp;#39;, &amp;#39;style&amp;#39;, &amp;#39;textarea&amp;#39;, &amp;#39;pre&amp;#39;],
    TeX: { equationNumbers: { autoNumber: &amp;#34;AMS&amp;#34; },
          extensions: [&amp;#34;AMSmath.js&amp;#34;, &amp;#34;AMSsymbols.js&amp;#34;] }
  }
});
&amp;lt;/script&amp;gt;

&amp;lt;script type=&amp;#34;text/x-mathjax-config&amp;#34;&amp;gt;
  // Fix &amp;lt;code&amp;gt; tags after MathJax finishes running. This is a
  // hack to overcome a shortcoming of Markdown. Discussion at
  // https://github.com/mojombo/jekyll/issues/199
  MathJax.Hub.Queue(() =&amp;gt; {
    MathJax.Hub.getAllJax().map(v =&amp;gt; v.SourceElement().parentNode.className += &amp;#39; has-jax&amp;#39;);
  });
&amp;lt;/script&amp;gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;第三块是对样式进行处理&lt;/p&gt;

&lt;p&gt;在CSS中对这种特殊的MathJax进行样式处理，否则行内公式的显示会有些奇怪。(&lt;font color=#FF0000&gt;&lt;strong&gt;亲测无效&lt;/strong&gt;&lt;/font&gt;)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;code.has-jax {
    font: inherit;
    font-size: 100%;
    background: inherit;
    border: inherit;
    color: #515151;
}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;!-- 默认情况下，(c)可转换为©，(r)可转换为®。 --&gt;

&lt;p&gt;但是，这样对行内公式仍然无法支持。 而除了支持行内公式，还有Markdown特殊字符的转义问题，如下划线_。 为了支持无需转义地写公式，行内公式推荐写成行内代码，用 ` ` 来包含，而区块公式则推荐用&lt;code&gt;&amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt;来包含。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;When `$a \ne 0$`, there are two solutions to `\(ax^2 + bx + c = 0\)` and they are:

&amp;lt;div&amp;gt;$$
x = {-b \pm \sqrt{b^2-4ac} \over 2a}
$$&amp;lt;/div&amp;gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
      
    </item>
    
    <item>
      <title>概率论基础01</title>
      <link>http://panfeng0119.github.io/post/mathematic/2018-12-23-math/</link>
      <pubDate>Sun, 23 Dec 2018 00:00:00 +0800</pubDate>
      
      <guid>http://panfeng0119.github.io/post/mathematic/2018-12-23-math/</guid>
      
        <description>

&lt;!-- # coding: utf-8 --&gt;

&lt;p&gt;&lt;a href=&#34;http://nbviewer.jupyter.org/github/hschen0712/machine_learning_notes/blob/master/PRML/Chap1-Introduction/1.2-probability-theory.ipynb&#34;&gt;原文连接&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;1-2-概率论回顾&#34;&gt;1.2 概率论回顾&lt;/h1&gt;

&lt;p&gt;概率，又称或然率、机会率、机率（几率）或可能性，是概率论的基本概念。概率是对随机事件发生的可能性的度量，一般以一个在0到1之间的实数表示一个事件发生的可能性大小。越接近1，该事件更可能发生；越接近0，则该事件更不可能发生。如某人有百分之多少的把握能通过这次考试，某件事发生的可能性是多少，这些都是概率的实例。&lt;/p&gt;

&lt;h2 id=&#34;求和法则与乘法法则&#34;&gt;求和法则与乘法法则&lt;/h2&gt;

&lt;p&gt;假设有两个离散随机变量&lt;code&gt;$X$&lt;/code&gt;和&lt;code&gt;$Y$&lt;/code&gt;，&lt;code&gt;$X$&lt;/code&gt;的取值范围为&lt;code&gt;$x_i,(i=1,2,...,M)$&lt;/code&gt;, &lt;code&gt;$Y$&lt;/code&gt; 的取值范围为&lt;code&gt;$y_j,(j=1,2,...,L)$&lt;/code&gt;。我们考虑在$N$次实验中同时对$X$和$Y$进行采样，设$n_{ij}$表示$X=x_i$且$Y=y_j$发生的次数，$c_i$表示$X=x_i$发生的次数（不管$Y$取值多少），$r_j$表示$Y=y_j$发生的次数。&lt;/p&gt;

&lt;p&gt;那么根据频率学派的观点，$X=x_i$且$Y=y_j$发生的概率，即二者的 &lt;strong&gt;联合概率（joint probability）&lt;/strong&gt; 定义为点$(X,Y)$落在单元$(i, j)$的次数占总实验次数的比例：&lt;/p&gt;

&lt;div&gt;$$
p(X=x_i,Y=y_j)=\frac{n_{ij}}{N}
$$&lt;/div&gt;

&lt;p&gt;$$
p(X=x_i)=\frac{c_i}{N}
$$&lt;/p&gt;

&lt;p&gt;这里我们默认$N\to \infty$。类似地，$X=x_i$的概率$p(X=x_i)$由如下公式给出：&lt;/p&gt;

&lt;p&gt;$$p(X=x_i)=\frac{c_i}{N}$$&lt;/p&gt;

&lt;p&gt;注意到 &lt;code&gt;$c_i=\sum_{j=1}^L n_{ij}$&lt;/code&gt; ，由此我们可以得到概率论中的 &lt;strong&gt;求和法则（sum rule）&lt;/strong&gt;：&lt;/p&gt;

&lt;div&gt;$$
p(X=x_i)=\frac{c_i}{N}=\sum_{j=1}^L \frac{n_{ij}}{N}=\sum_{j=1}^L p(X=x_i, Y=y_j)
$$&lt;/div&gt;

&lt;p&gt;如果我们只考虑$X=x_i$的样例中$Y=y_j$样本所占的比例，记为$p(Y=y_j|X=x_i)$，也被称为给定$X=x_i$情况下$Y=y_j$的条件概率，则该条件概率可以由落在单元$(i, j)$内的点的个数与落在第$i$列的点的总数的比值给出：&lt;/p&gt;

&lt;div&gt;$$
p(Y=y_j|X=x_i)=\frac{n_{ij}}{c_i}
$$&lt;/div&gt;

&lt;p&gt;在定义了条件概率之后，我们回过头来看联合概率，可以发现：&lt;/p&gt;

&lt;div&gt;$$ 
p(X=x_i, Y=y_j)=\frac{n_{ij}}{N}=\frac{n_{ij}}{c_i}\cdot \frac{c_i}{N}=p(Y=y_j|X=x_i)p(X=x_i)
$$&lt;/div&gt;

&lt;p&gt;上述公式即为概率论中的*乘法法则（product rule）*。&lt;/p&gt;

&lt;p&gt;为了表述方便，我们将$X,Y$的具体取值省略，将两个法则写为：
&lt;div&gt;$$
\begin{aligned}\textbf{sum rule}\quad\quad &amp;amp;p(X)=\sum\limits_{Y}p(X,Y)\\textbf{product rule}\quad\quad &amp;amp;p(X, Y)=p(Y|X) p(X)\end{aligned}
$$&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;这两个法则十分重要，因为它们是概率背后运作的机制，构成了概率论的理论基石。&lt;/p&gt;

&lt;h2 id=&#34;贝叶斯公式&#34;&gt;贝叶斯公式&lt;/h2&gt;

&lt;p&gt;根据乘法法则以及联合概率的对称性（$p(X,Y)=p(Y,X)$）可得：&lt;/p&gt;

&lt;div&gt;$$
p(Y|X)p(X)=p(X|Y)p(Y)
$$&lt;/div&gt;

&lt;p&gt;上式又可以改写为&lt;/p&gt;

&lt;div&gt;$$
p(Y|X)=\frac{p(X|Y)p(Y)}{p(X)}
$$&lt;/div&gt;

&lt;p&gt;这个公式就是概率论中鼎鼎有名的 &lt;strong&gt;贝叶斯公式（Bayes&amp;rsquo; theorem）&lt;/strong&gt; ，它在机器学习和模式识别中发挥着至关重要的作用。其中$p(Y|X)$称为 &lt;strong&gt;后验概率（posterior probability）&lt;/strong&gt;，$p(X|Y)$称为 &lt;strong&gt;似然函数（likelihood function）&lt;/strong&gt;，$p(Y)$称为 &lt;strong&gt;先验概率（prior probability）&lt;/strong&gt;, $p(X)$称为 &lt;strong&gt;归一化因子（normalize factor）&lt;/strong&gt;。根据加法公式我们可以把分母用分子中的似然函数和先验概率来表示：&lt;/p&gt;

&lt;div&gt;$$
p(X)=\sum_{Y}p(X|Y)p(Y)
$$&lt;/div&gt;

&lt;p&gt;如果联合概率可以分解为各自边缘概率的乘积，即$p(X, Y)=p(X)p(Y)$，则我们说$X$和$Y$彼此独立，并且有$p(Y|X)=p(Y)$，也就是说给定$X$情况下$Y$的分布与$X$的取值无关。&lt;/p&gt;

&lt;h2 id=&#34;概率密度&#34;&gt;概率密度&lt;/h2&gt;

&lt;p&gt;我们可以把概率的定义从离散的情况推广到连续的情形，在这种背景下，我们引入&lt;em&gt;概率密度函数（probability density）&lt;/em&gt;$p(x)$来描述连续随机变量$X$的概率分布。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;概率密度&lt;/strong&gt; 当$\delta x\to 0$时，如果$X$落在区间$(x,x+\delta x)$的概率等于$p(x)\delta x$，即
$$\lim_{\delta x\to 0} p\big(X\in(x,x+\delta x)\big)=p(x)\delta x$$
则称$p(x)$为$X$的概率密度函数&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;注意到当$\delta x\to 0$时，$p(x)\delta x$可以视为图中阴影部分的面积:&lt;/p&gt;

&lt;p&gt;那么$X$落在区间$(a,b)$内的概率$p(X\in(a,b))$就是$p(x)$在区间$(a,b)$内的面积，我们可以用概率密度的积分来表示它：&lt;/p&gt;

&lt;p&gt;$$
p(X\in(a,b))=\int_a^b p(x)dx
$$&lt;/p&gt;

&lt;p&gt;此外，考虑到概率的性质，概率密度也必须满足：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;$$ p(x)\geq 0\ \int_{-\infty}^{\infty} p(x)dx=1$$&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;利用密度函数在一个区间上的积分等于随机变量落在这个区间上的概率这一性质，我们可以定义 &lt;strong&gt;累积密度函数（cdf）&lt;/strong&gt;：
$$P(z)=\int_{-\infty}^z p(x) dx$$
$P(z)$表示$X$处于$(-\infty, z)$之间的概率，且满足$P&amp;rsquo;(x)=p(x)$&lt;/p&gt;

&lt;p&gt;假设我们知道$x$的概率密度为$f_X(x)$，如果我们对$x$做一个非线性变换$y=g(x)$（这里$g(x)$必须是单调递增函数）,那么我们可以用如下公式计算$y$的概率密度$f_Y(y)$：
$$ f_Y(y)=f_X(g^{-1}(y))\bigg|\frac{d }{dy}g^{-1}(y)\bigg|$$
这个公式称为 &lt;strong&gt;变元公式（change of a variable）&lt;/strong&gt;，证明过程如下：&lt;br /&gt;
首先将$P(X\leq x)$简记为$P_X(x)$，将$P(Y\leq y)$简记为$P_Y(y)$。
因为概率密度是分布函数的导数，根据定义我们有
$$\begin{aligned}f_Y(y)&amp;amp;=\frac{d}{dy}P_Y(y)=\frac{d}{dy}P(g(X)\leq y)\&amp;amp;=\frac{d}{dx}P_X(g^{-1}(y))\bigg|\frac{dx}{dy}\bigg|\&amp;amp;=f_X(g^{-1}(y))\bigg|\frac{d}{dy}g^{-1}(y)\bigg|\end{aligned}$$&lt;/p&gt;

&lt;p&gt;同样地，我们可以将加法公式、乘法公式和贝叶斯公式推广到连续随机变量上：&lt;/p&gt;

&lt;blockquote&gt;
&lt;div&gt;$$ 
\begin{aligned}\textbf{sum rule}\quad\quad &amp;p(x)=\int p(x,y) dy\\\textbf{product rule}\quad\quad &amp;p(x, y)=p(y|x) p(x)\\\textbf{Bayes&#39; rule}\quad\quad &amp;p(y|x)=\frac{p(x|y) p(y)}{\int_Y p(x|y) p(y) dy}\end{aligned}
$$&lt;/div&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;期望和协方差&#34;&gt;期望和协方差&lt;/h2&gt;

&lt;p&gt;函数$f(x)$在概率密度$p(x)$下的加权平均称为$f(x)$的 &lt;strong&gt;期望（expectation）&lt;/strong&gt;，当$X$为离散随机变量时期望定义为&lt;/p&gt;

&lt;p&gt;$$\mathbb{E}[f]=\sum_x p(x) f(x)$$&lt;/p&gt;

&lt;p&gt;当$X$为连续随机变量时期望定义为&lt;/p&gt;

&lt;p&gt;$$\mathbb{E}[f]=\int p(x)f(x) dx$$&lt;/p&gt;

&lt;p&gt;给定$N$个从分布$p(x)$抽样得到的样本&lt;code&gt;$x_1, x_2, ...,x_N$&lt;/code&gt;，我们可以用如下公式近似估计期望：&lt;/p&gt;

&lt;div&gt;$$ 
\frac{1}{N}\sum_{n=1}^N f(x_n)\approx \mathbb{E}[f]
$$&lt;/div&gt;

&lt;p&gt;当$N\to\infty$时，上式等号成立。&lt;br /&gt;
有时我们希望计算多元函数关于某个变量的期望，我们用下标指定要求期望的变量：&lt;/p&gt;

&lt;p&gt;$$E_x[f(x,y)]=\int f(x,y)p(x)dx$$&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;条件期望（conditional expectation）&lt;/strong&gt;定义为&lt;/p&gt;

&lt;div&gt;$$ 
E_x[f|y]=\int p(x|y)f(x)dx
$$&lt;/div&gt;

&lt;p&gt;函数$f(x)$的方差定义为&lt;/p&gt;

&lt;div&gt;$$ 
var[f]=\mathbb{E}\big[(f(x)-\mathbb{E}[f(x)])^2\big]
$$&lt;/div&gt;

&lt;p&gt;经过一番计算，方差可以简化为&lt;/p&gt;

&lt;p&gt;$$var[f]=\mathbb{E}[f(x)^2]-\mathbb{E}[(f(x)]^2$$&lt;/p&gt;

&lt;p&gt;随机变量$x$和$y$的 &lt;strong&gt;协方差（covariance）&lt;/strong&gt;定义为&lt;/p&gt;

&lt;div&gt;$$ 
cov[x,y]=\mathbb{E}_{x,y}[\{x-\mathbb{E}[x]\}\{y-\mathbb{E}[y]\}=\mathbb{E}_{x,y}[xy]-\mathbb{E}[x]\mathbb{E}[y]
$$&lt;/div&gt;

&lt;p&gt;随机向量 &lt;code&gt;$\mathbf{x}$&lt;/code&gt; 和&lt;code&gt;$\mathbf{y}$&lt;/code&gt;的 &lt;strong&gt;协方差（covariance）&lt;/strong&gt;定义为&lt;/p&gt;

&lt;div&gt;$$
cov[\mathbf{x}, \mathbf{y}]=\mathbb{E}_{\mathbf{x},\mathbf{y}}[\{\mathbf{x}-\mathbb{E}[\mathbf{x}]\}\{\mathbf{y}^\top-\mathbb{E}[\mathbf{y}^\top]\}=\mathbb{E}_{\mathbf{x},\mathbf{y}}[\mathbf{x}\mathbf{y}^\top]-\mathbb{E}[\mathbf{x}]\mathbb{E}[\mathbf{y}^\top]
$$&lt;/div&gt;

&lt;h2 id=&#34;贝叶斯概率&#34;&gt;贝叶斯概率&lt;/h2&gt;

&lt;p&gt;上一节，我们以频率的观点来理解概率，并从一个简单的例子出发推导出了概率论中许多常用的结论。在频率派看来，概率定义为在在相同环境条件中重复某个实验（无穷）多次的背景下，一件事发生的相对频率。因此为了得到准确的概率值，我们通常必须重复相同的实验很多次，例如我们需要重复投掷一枚硬币成千上万次才能精确估计其均匀程度。&lt;/p&gt;

&lt;p&gt;然而并不是所有事件的概率都能用频率的观点来解释，考虑以下问题：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;2050年南极冰川是否会全部融化？&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;因为目前是2016年，我们无法对其进行观测，这就导致了该事件的概率是未定义的。而贝叶斯统计学则为我们提供了一种完全不同的视角来看待这个问题。贝叶斯派认为概率是一种不确定性的度量，是人对于某个不确定事件是否会发生的置信度。贝叶斯的主要思路是通过不断收集证据来修正人对某件事的主观认识，比如我们可以通过观察南极冰川融化的速度来量化其不确定性，从而决定是否要减少温室气体的排放。&lt;/p&gt;

&lt;p&gt;考虑上一节介绍的曲线拟合的例子，我们可以用贝叶斯框架对模型参数$\mathbf{w}$作推断。获得观测样本前我们对于模型参数$\mathbf{w}$的假设以&lt;strong&gt;先验分布&lt;/strong&gt;$p(\mathbf{w})$的形式表达，采集到的观测数据&lt;code&gt;$\mathcal{D}=\{(x_1,t_1),...,(x_N, t_N)\}$&lt;/code&gt;通过&lt;strong&gt;似然函数&lt;/strong&gt;$p(\mathcal{D}|\mathbf{w})$发挥作用，注意到它是关于$\mathcal{D}$（已知）的分布，因此它是关于$\mathbf{w}$的函数，反映了在不同的模型参数取值下产生该组观测值的可能性。透过似然函数，我们将关于$\mathbf{w}$的置信度转变为了&lt;strong&gt;后验分布&lt;/strong&gt;$p(\mathbf{w}|\mathcal{D})$的形式，它表达了在获得观测数据后对于先验$p(\mathbf{w})$的修正。具体地，依据贝叶斯公式有：&lt;/p&gt;

&lt;p&gt;$$
p(\mathbf{w}|\mathcal{D})=\frac{p(\mathcal{D}|\mathbf{w})p(\mathbf{w})}{p(\mathcal{D})}$$&lt;/p&gt;

&lt;p&gt;注意到$p(\mathcal{D})$只是个定值，起到归一化作用，我们可以将其用先验和似然的乘积关于$\mathbf{w}$的积分表示出来&lt;/p&gt;

&lt;p&gt;$$p(\mathcal{D})=\int p(\mathcal{D}|\mathbf{w})p(\mathbf{w})d\mathbf{w}$$&lt;/p&gt;

&lt;p&gt;如果忽略$p(\mathcal{D})$，我们可以将先验、似然、后验之间的关系表达为如下的形式：&lt;/p&gt;

&lt;p&gt;$$ posterior \propto likelihood \times prior $$&lt;/p&gt;

&lt;p&gt;其中$\propto$表示正比符号，三个量都可以视为$\mathcal{w}$的函数。&lt;/p&gt;

&lt;p&gt;无论是频率派还是贝叶斯派，似然函数都起着重要的作用，然而对似然函数使用方式的不同是两者最本质的区别。以上一节介绍的曲线拟合为例，频率派认为参数$\mathbf{w}$固定而数据是随机产生的，我们通过最大化似然函数的思想利用观测数据去反推这个值。而贝叶斯派则认为数据集是确定的，模型参数$\mathbf{w}$是随机的，我们通过似然函数将先验修改为后验。频率派利用交叉验证来选择合适的模型，但贝叶斯中先验的选择通常出于数学上的方便，而不是是否符合直觉。&lt;/p&gt;

&lt;p&gt;贝叶斯一直面临着两个难题：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;合理的推断依赖于合适的先验，如何选取合适的先验却一直被频率派诟病&lt;/li&gt;
&lt;li&gt;一个完整的贝叶斯推断过程（比如作预测或比较模型）通常包含参数空间的积分，带来高昂的计算代价&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;近几十年来随着计算机运算速度的提高，后验概率的计算逐渐变得可行，目前可行的方法有两种：
1. 基于采样的方法 主要代表是MCMC，Gibbs采样。这类方法的优点是精度高，适用于任何形式的后验估计；缺点是效率低，只适用于小规模数据。
2. 基于优化的方法 主要代表是变分贝叶斯。这类方法的优点是速度快，适用于大规模数据；缺点是牺牲了精度以换取速度的提升。&lt;/p&gt;

&lt;h2 id=&#34;高斯分布&#34;&gt;高斯分布&lt;/h2&gt;

&lt;p&gt;高斯分布是概率论中最常用的概率分布之一，其定义如下&lt;/p&gt;

&lt;div&gt;$$
\frac{1}{(2\pi \sigma^2)^{1/2}} \exp({-\frac{1}{2\sigma^2} (x-\mu)^2}) 
$$&lt;/div&gt;

&lt;p&gt;其中$\mu$是均值，$\sigma^2$是方差，$\sigma$称为标准差，方差的倒数$\beta=1/\sigma^2$称为精度。&lt;/p&gt;

&lt;p&gt;可以证明，高斯分布满足概率的以下两个性质：&lt;/p&gt;

&lt;p&gt;$$\mathcal{N}(x|\mu,\sigma^2)&amp;gt;0\\int_{-\infty}^{\infty}\mathcal{N}(x|\mu,\sigma^2)dx=1$$&lt;/p&gt;

&lt;p&gt;高斯分布的期望为&lt;/p&gt;

&lt;p&gt;$$\mathbb{E}[x]=\int_{-\infty}^{\infty}\mathcal{N}(x|\mu,\sigma^2)\ x\ dx=\mu$$&lt;/p&gt;

&lt;p&gt;高斯分布的二阶矩为&lt;/p&gt;

&lt;p&gt;$$\mathbb{E}[x^2]=\int_{-\infty}^{\infty}\mathcal{N}(x|\mu,\sigma^2)\ x^2\ dx=\mu^2+\sigma^2$$&lt;/p&gt;

&lt;p&gt;方差为&lt;/p&gt;

&lt;p&gt;$$var[x]=\mathbb{E}[x^2]-\mathbb{E}[x]^2=\sigma^2$$&lt;/p&gt;

&lt;p&gt;设$\mathbf{x}$是$D$维的向量，则其对应的多元高斯分布的概率密度函数为：&lt;/p&gt;

&lt;div&gt;$$
\mathcal{N}(\mathbf{x}|\mathbf{\mu},\Sigma)=\frac{1}{(2\pi)^{D/2}}\frac{1}{|\Sigma|^{1/2}}\exp\big\{-\frac{1}{2}(\mathbf{x}-\mathbf{\mu})^\top\Sigma^{-1}(\mathbf{x}-\mathbf{\mu})\big\}
$$&lt;/div&gt;

&lt;p&gt;其中$\mathbf{\mu}$是$D$维的均值向量，$\Sigma$是$D\times D$的协方差矩阵，$|\Sigma|$表示$\Sigma$的行列式。&lt;/p&gt;

&lt;p&gt;现在假设有一组数据$\mathrm{x}={x_1,&amp;hellip;,x_N}$,为了确定高斯分布的参数我们假定它们是独立同分布地从同一个分布产生的，于是这组数据的似然函数可以表示为&lt;/p&gt;

&lt;p&gt;$$p(\mathrm{x}|\mu,\sigma^2 )=\prod_{n=1}^N \mathcal{N}(x_n|\mu, \sigma^2)$$&lt;/p&gt;

&lt;p&gt;频率派最常用的参数估计方法是最大似然估计，其思想是通过最大化似然函数找到参数的估计。由于对似然函数取对数不影响优化，我们可以得到对数似然函数：&lt;/p&gt;

&lt;p&gt;$$\ln\ p(\mathrm{x}|\mu,\sigma^2 )=-\frac{1}{2\sigma^2}\sum_{n=1}^N(x_n-\mu)^2-\frac{N}{2}ln\ \sigma^2-\frac{N}{2}\ln\ (2\pi)$$&lt;/p&gt;

&lt;p&gt;关于$\mu$优化，得到其最大似然估计&lt;/p&gt;

&lt;div&gt;$$
\mu_{ML}=\frac{1}{N}\sum_{n=1}^N x_n
$$&lt;/div&gt;

&lt;p&gt;注意到$\mu$的最大似然估计等价于样本均值。关于$\sigma^2$我们得到&lt;/p&gt;

&lt;div&gt;$$
\sigma_{ML}=\frac{1}{N}\sum_{n=1}^N (x_n-\mu_{ML})^2
$$&lt;/div&gt;

&lt;p&gt;也就是样本方差。&lt;/p&gt;

&lt;p&gt;注意到最大似然估计是有偏估计：&lt;/p&gt;

&lt;div&gt;$$\mathbb{E}[\mu_{ML}]=\mu\\\mathbb{E}[\sigma^2_{ML}]=\bigg(\frac{N-1}{N}\bigg)\sigma^2
$$&lt;/div&gt;

&lt;p&gt;也就是说$\sigma^2_{ML}$低估了$\sigma^2$，这种有偏性随着样本量增大而逐渐减轻，当$N\to\infty$时这种有偏性消失。&lt;/p&gt;

&lt;h2 id=&#34;重访曲线拟合&#34;&gt;重访曲线拟合&lt;/h2&gt;

&lt;p&gt;让我们回到曲线拟合问题上来，这次我们将从概率的角度来重塑我们对于这个问题的理解，我们将证明当假设误差服从一个高斯分布时，通过最大似然估计（MLE，maximum likelihood estimation）可以得到最小二乘的目标函数。&lt;/p&gt;

&lt;p&gt;假设给定输入变量 $x$，目标变量值$t$服从一个均值为$y(x,\mathbf{w})$的高斯分布:&lt;/p&gt;

&lt;p&gt;$$ p(t|x, \mathbf{w},\beta)=\mathcal{N}(t| y(x,\mathbf{w}), \beta^{-1}) $$&lt;/p&gt;

&lt;p&gt;其中$\beta=1/\sigma^2$ 为高斯的精度。&lt;/p&gt;

&lt;p&gt;我们进一步假设数据集$\mathrm{x}={x_1,&amp;hellip;,x_N}$中的样本点独立同分布地从上述的高斯分布产生。那么该数据集的似然函数为:&lt;/p&gt;

&lt;div&gt;$$ 
p( \mathbf{t}| \mathbf{x}, \mathbf{w},\beta )=\prod_{n=1}^N  \mathcal{N}(t_n| y(x_n,\mathbf{w}), \beta^{-1})  $$&lt;/div&gt;

&lt;p&gt;最大似然估计的目标是最大化对数似然函数：&lt;/p&gt;

&lt;div&gt;$$\mathbf{w}_{ML}=\arg\max_{\mathbf{w}}\ln\ p( \mathbf{t}| \mathbf{x}, \mathbf{w},\beta )$$&lt;/div&gt;

&lt;p&gt;对似然函数取对数的好处有三：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;对数函数是单调递增函数，这意味着最大化对数似然等价于最大化似然函数&lt;/li&gt;
&lt;li&gt;乘积的对数可以转化为对数的和，在数学上更易于求导&lt;/li&gt;
&lt;li&gt;由于概率值介于0，1之间，连续多个概率值的乘积可能导致概率值下溢，取对数可以防止下溢保证结果的精度&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;通过取对数，我们得到对数似然函数：&lt;/p&gt;

&lt;p&gt;$$ \mathcal{L}(\mathbf{w},\beta)=ln \, p( \mathbf{t}| \mathbf{x}, \mathbf{w},\beta )=-\frac{\beta}{2}\sum_{n=1}^N{y(x_n,\mathbf{w})-t_n}^2+ \frac{N}{2}ln\, \beta- \frac{N}{2} ln\, (2\pi) $$&lt;/p&gt;

&lt;p&gt;首先，我们先来优化$\mathbf{w}$。注意到后两项不依赖于 $\mathbf{w}$，因此我们可以丢掉它们。于是我们的目标变为最大化 &lt;code&gt;$- \frac{\beta}{2}\sum_{n=1}^N\{y(x_n,\mathbf{w})-t_n\}^2$&lt;/code&gt;，其等价于最小化&lt;code&gt;$ \frac{\beta}{2}\sum_{n=1}^N \{ y(x_n,\mathbf{w})-t_n \}^2$&lt;/code&gt;。基于$\mathbf{w}$不依赖于$\beta$ 且 $\beta&amp;gt;0$的事实，我们可以任意放缩系数&lt;code&gt;$ \frac{\beta}{2}$&lt;/code&gt;。不失一般性，我们将系数设为&lt;code&gt;$1/2$&lt;/code&gt;。最终，我们的目标函数定义如下:&lt;/p&gt;

&lt;div&gt;$$ \mathbf{w}_{ML}=\arg\min_{\mathbf{w}}  \frac{1}{2}\sum_{n=1}^N \{ y(x_n,\mathbf{w})-t_n \}^2 $$&lt;/div&gt;

&lt;p&gt;这个函数有点眼熟，它不就是1.1节中的平方和误差么？至此我们证明了当假设误差服从一个高斯分布时，从最大似然估计（MLE，maximum likelihood estimation）出发可以得到最小二乘的目标函数。&lt;/p&gt;

&lt;p&gt;接着，我们还要优化$\beta$:&lt;/p&gt;

&lt;p&gt;$$ \frac{\partial  \mathcal{L}(\mathbf{w},\beta)}{\partial \beta} =   -\frac{1}{2}\sum_{n=1}^N{y(x_n,\mathbf{w})-t_n}^2+ \frac{N}{2\beta}=0 $$&lt;/p&gt;

&lt;p&gt;由此可得&lt;/p&gt;

&lt;div&gt;$$ \frac{1}{\beta_{ML}}=\sigma_{ML}^2=  \sum_{n=1}^N\{y(x_n,\mathbf{w})-t_n\}^2$$&lt;/div&gt;

&lt;p&gt;将$\mathbf{w}&lt;em&gt;{ML},\beta&lt;/em&gt;{ML}$代回到本节开头的概率密度式就得到了关于$t$的预测分布：&lt;/p&gt;

&lt;div&gt;$$p(t|x, \mathbf{w}_{ML},\beta_{ML})=\mathcal{N}(t| y(x,\mathbf{w}_{ML}), \beta_{ML}^{-1}) $$&lt;/div&gt;

&lt;p&gt;接下来介绍一种更“贝叶斯”的方法，我们可以对参数$\mathbf{w}$假设一个先验，为了数学上的方便不妨假设其为一个零均值，协方差为对角阵的多元高斯：&lt;/p&gt;

&lt;p&gt;$$p(\mathbf{w}|\alpha)=\mathcal{N}(\mathbf{w}|\mathbf{0},\alpha^{-1}\boldsymbol{I})=\Big(\frac{\alpha}{2\pi}\Big)^{(M+1)/2}\exp(-\frac{\alpha}{2}\mathbf{w}^T\mathbf{w})$$&lt;/p&gt;

&lt;p&gt;其中$\alpha$是高斯的精度，也称为超参数（即参数的参数）；$M+1$是$\mathbf{w}$中的参数个数。&lt;/p&gt;

&lt;p&gt;根据贝叶斯公式，后验正比于似然与先验的乘积：&lt;/p&gt;

&lt;p&gt;$$p(\mathbf{w}|\mathbf{x},\mathbf{t},\alpha,\beta)\propto p(\mathbf{t}|\mathbf{x},\mathbf{w},\beta)p(\mathbf{w}|\alpha)$$&lt;/p&gt;

&lt;p&gt;这个公式乍看之下挺难理解，不过只要你学了概率图模型，你就会发现要理解它其实非常容易。首先我们画出这几个变量的概率图模型：&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://7xikew.com1.z0.glb.clouddn.com/prml-1.2-1.png&#34; width=&#34;500&#34;&gt;&lt;/p&gt;

&lt;p&gt;很显然，$\mathcal{w}$的后验依赖于$\mathrm{t}$和$\alpha$，此时还需注意到$\mathrm{x}$、$\beta$和$\mathbf{w}$是$\mathrm{t}$的共同祖先，因此$\mathcal{w}$也依赖于$\mathrm{x}$和$\beta$。&lt;/p&gt;

&lt;p&gt;我们将后验写为如下形式&lt;/p&gt;

&lt;p&gt;$$p(\mathbf{w}|\mathbf{x},\mathbf{t},\alpha,\beta)=\frac{p(\mathbf{w},\mathbf{x},\mathbf{t},\alpha,\beta)}{p(\mathbf{x},\mathbf{t},\alpha,\beta)}\propto p(\mathbf{w},\mathbf{x},\mathbf{t},\alpha,\beta)$$&lt;/p&gt;

&lt;p&gt;根据概率图模型的链式法则，我们可以将联合概率分解为&lt;/p&gt;

&lt;p&gt;$$p(\mathbf{w},\mathbf{x},\mathbf{t},\alpha,\beta)=p(\mathbf{t}|\mathbf{x},\mathbf{w},\beta)p(\mathbf{w}|\alpha)p(\alpha)p(\beta)$$&lt;/p&gt;

&lt;p&gt;由于我们只关心与$\mathbf{w}$有关的概率，因此$p(\alpha)$和$p(\beta)$可以省略，于是我们就得到了&lt;/p&gt;

&lt;p&gt;$$p(\mathbf{w}|\mathbf{x},\mathbf{t},\alpha,\beta)\propto p(\mathbf{t}|\mathbf{x},\mathbf{w},\beta)p(\mathbf{w}|\alpha)$$&lt;/p&gt;

&lt;p&gt;将$p(\mathrm{t}|\mathrm{x},\mathbf{w},\beta)$和$p(\mathbf{w}|\alpha)$的具体形式代入并取对数，通过最大化对数后验分布我们得到关于$\mathbf{w}$的最大后验估计（MAP, maximum a posteriori）：&lt;/p&gt;

&lt;div&gt;$$\begin{aligned}\mathbf{w}_{MAP}&amp;=\arg\max_{\mathbf{w}} \ln\ p(\mathbf{w}|\mathbf{x},\mathbf{t},\alpha,\beta)\\&amp;=\arg\max_{\mathbf{w}} - \frac{\beta}{2}\sum_{n=1}^N(t_n-y(x_n,\mathbf{w}))^2-\frac{\alpha}{2}\mathbf{w}^T\mathbf{w}\\&amp;=\arg\min_{\mathbf{w}} \frac{1}{2}\sum_{n=1}^N(t_n-y(x_n,\mathbf{w}))^2+\frac{\alpha}{2\beta}\mathbf{w}^T\mathbf{w}\\&amp;= \arg\min_{\mathbf{w}} \frac{1}{2}\sum_{n=1}^N(t_n-y(x_n,\mathbf{w}))^2+\frac{\lambda}{2}\mathbf{w}^T\mathbf{w}\end{aligned}$$&lt;/div&gt;

&lt;p&gt;其中$\lambda=\frac{\alpha}{\beta}$，就是1.1节中的正则化系数。&lt;/p&gt;

&lt;h2 id=&#34;贝叶斯曲线拟合&#34;&gt;贝叶斯曲线拟合&lt;/h2&gt;

&lt;p&gt;前面介绍的MLE和MAP都属于点估计，这一节将介绍一种更完全的贝叶斯方法。回顾曲线拟合的目标，我们希望为给定的输入$\hat{x}$预测其对应的输出$\hat{t}$。这里假设参数$\alpha$和$\beta$已知，于是可以省略$\mathbf{w}$的后验概率中的参数，写为$p(\mathbf{w}|\mathbf{x},\mathbf{t})$。通过对下式右端关于$\mathbf{w}$积分，我们可以得到$t$的后验预测分布（posterior predictive distribution）：
$$ p(t|x,\mathbf{x},\mathbf{t})=\int p(t|x,\mathbf{w})p(\mathbf{w}|\mathbf{x},\mathbf{t})d\mathbf{w}$$
这个公式是我读这本书遇到的第一道坎，貌似很多人也在这个公式上卡了很久。我说一下我对这个公式的理解：&lt;br /&gt;
&lt;strong&gt;第一种理解&lt;/strong&gt;：我们知道在贝叶斯中数据是已知的，只有参数$\mathbf{w}$是不确定的，因此式中$x,\mathbf{x},\mathbf{t}$都是确定的，为了直观我们可以把已知的都省略，于是原式变为
$$p(t)=\int p(t|\mathbf{w})p(\mathbf{w}) d\mathbf{w}=\int p(t,\mathbf{w})d\mathbf{w}$$
这就很好理解了，就是对$\mathbf{w}$做marginalization（运用概率论的乘法公式和加法公式，连续的情况下求和变为积分）。&lt;br /&gt;
&lt;strong&gt;第二种理解&lt;/strong&gt;：概率图模型，需要用到 &lt;strong&gt;D-separation&lt;/strong&gt;理论（D-Separation是一种用来判断变量是否条件独立的图形化方法）。以下举个D-separation最简单的例子，更多的理论知识请参考PRML第8章&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://7xikew.com1.z0.glb.clouddn.com/d_separation.png&#34; width=&#34;300&#34;&gt;&lt;/p&gt;

&lt;p&gt;我们要确定上图中$a$和$b$的关系，则可以分为两种情况来讨论&lt;/p&gt;

&lt;p&gt;首先依据链式法则,我们写出该图模型的联合概率&lt;/p&gt;

&lt;div&gt;$$p(a,b,c)=p(c)p(a|c)p(b|c)$$&lt;/div&gt;

&lt;p&gt;1）如果随机变量$(c)$已经被观测，则$a$与$b$条件独立，即&lt;code&gt;$p(a,b|c)=p(a|c)p(b|c)$&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;证明过程如下：&lt;/p&gt;

&lt;div&gt;$$p(a,b|c)=\frac{p(a,b,c)}{p(c)}=\frac{p(c)p(a|c)p(b|c)}{p(c)}=p(a|c)p(b|c)$$&lt;/div&gt;

&lt;p&gt;同理，我们还能证明$p(b|a, c)=p(b|c)$&lt;/p&gt;

&lt;div&gt;$$p(b|a, c)=\frac{p(a,b,c)}{p(a, c)}=\frac{p(c)p(a|c)p(b|c)}{p(c)p(a|c)}=p(b|c)$$&lt;/div&gt;

&lt;p&gt;2）如果随机变量$c$未被观测，通过对$p(a,b,c)$关于$c$积分我们获得$a$和$b$的联合概率&lt;/p&gt;

&lt;div&gt;$$p(a,b)=\sum_{c}=p(c)p(a|c)p(b|c)$$&lt;/div&gt;

&lt;p&gt;通常情况下，$p(a,b)$是不等于$p(a)p(b)$的，因此$a$和$b$相互不独立&lt;/p&gt;

&lt;p&gt;接下来我们讨论回归模型的概率图模型：&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://7xikew.com1.z0.glb.clouddn.com/regression-graph-model.png&#34; width=&#34;300&#34;&gt;&lt;/p&gt;

&lt;p&gt;接下来我们来证明原式成立：&lt;/p&gt;

&lt;div&gt;$$
\begin{aligned}p(t|x,\mathbf{x},\mathbf{t})&amp;=\frac{p(t,x,\mathbf{x},\mathbf{t})}{p(x,\mathbf{x},\mathbf{t})}\\&amp;=\int \frac{p(t,x,\mathbf{x},\mathbf{t}, \mathbf{w})}{p(x,\mathbf{x},\mathbf{t})}d\mathbf{w}\\&amp;=\int \frac{p(t,x,\mathbf{x},\mathbf{t}, \mathbf{w})}{p(x,\mathbf{x},\mathbf{t}, \mathbf{w})}\frac{p(x,\mathbf{x},\mathbf{t}, \mathbf{w})}{p(x,\mathbf{x},\mathbf{t})}d\mathbf{w}\\&amp;=\int p(t|x,\mathbf{x},\mathbf{t}, \mathbf{w})p(\mathbf{w}|x,\mathbf{x},\mathbf{t})d\mathbf{w}\end{aligned}
$$&lt;/div&gt;

&lt;p&gt;根据图模型的 &lt;strong&gt;D-separation&lt;/strong&gt; 理论，$\mathbf{w}$被观测的条件下，上图中$\mathbf{x}$到$t$（在图中是$\hat{t}$）的通路被阻断，因此$t$与$\mathbf{x}$及$\mathbf{t}$相互独立，则&lt;/p&gt;

&lt;div&gt;$$p(t|x,\mathbf{x},\mathbf{t}, \mathbf{w})=p(t|x,\mathbf{w})$$&lt;/div&gt;

&lt;p&gt;接着我们考察概率$p(\mathbf{w}|x,\mathbf{x},\mathbf{t})$，由于$t$尚未被观测，根据图模型&lt;strong&gt;D-separation&lt;/strong&gt;理论，$\mathbf{w}$和$x$应该是独立的，此外由于$\mathbf{t}$已经被观测，那么$\mathbf{w}$与$\mathbf{x}$条件不独立。于是&lt;/p&gt;

&lt;p&gt;$$p(\mathbf{w}|x,\mathbf{x},\mathbf{t})=p(\mathbf{w}|\mathbf{x},\mathbf{t})$$&lt;/p&gt;

&lt;p&gt;综上，我们知道&lt;/p&gt;

&lt;p&gt;$$
p(t|x,\mathbf{x},\mathbf{t})=\int p(t|x,\mathbf{w})p(\mathbf{w}|\mathbf{x},\mathbf{t})d\mathbf{w}
$$&lt;/p&gt;

&lt;p&gt;在理解了后验预测分布是怎么来的以后，我们需要计算该分布。注意到似然函数$p(t|x,\mathbf{w})$是个高斯分布，而先验$p(\mathbf{w})$也是个高斯分布，贝叶斯统计学里可以证明，当先验和似然都是高斯分布时则后验与先验共轭，即后验也是一个高斯分布（准确来说，只要都属于指数分布族该结论都能成立）。至此，我们知道了$p(t|x,\mathbf{w})$和$p(\mathbf{w}|\mathbf{x},\mathbf{t})$都是高斯分布，这还没完，因为我们还没求积分呢。刚开始看到这个积分，我也十分头大，觉得根本无从下手，于是我就开始在网上漫无目的地寻找线索，也许是因为我的搜索技术高超，最后还真被我找到了点蛛丝马迹。其实这个积分是两个高斯分布的卷积，可以证明两个高斯分布的卷积还是一个高斯分布，经过一大串的计算可以得到如下的结论（具体怎么算的，看我的另一篇&lt;a href=&#34;../Chap3-Linear-Models-For-Regression/summary-baysian-linear-regression.ipynb&#34;&gt;笔记&lt;/a&gt;）：&lt;/p&gt;

&lt;div&gt;$$ 
p(t|x,\mathbf{x}, \mathbf{t})=\mathcal{N}\big(t|m(x),s^2(x)\big)
$$&lt;/div&gt;

&lt;p&gt;其中均值和方差都是关于$x$的函数，定义为&lt;/p&gt;

&lt;div&gt;$$ 
m(x)=\beta\phi(x)^T \mathbf{S}\sum_{n=1}^N\phi(x_n)t_n\\s^2(x)=\beta^{-1}+\phi(x)^T\mathbf{S}\phi(x)
$$&lt;/div&gt;

&lt;p&gt;这里矩阵$\mathbf{S}$由下式给出&lt;/p&gt;

&lt;div&gt;$$
\mathbf{S}^{-1}=\alpha \mathbf{I}+\beta\sum_{n=1}^N\phi(x_n)\phi(x_n)^T
$$&lt;/div&gt;

&lt;p&gt;其中$\mathbf{I}$是单位矩阵，$\phi(x)$是关于$x$的特征变换，其中$\phi_i(x)=x^i,i=0,&amp;hellip;,M$&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>Hugo 02 | Hugo 模板介绍</title>
      <link>http://panfeng0119.github.io/post/hugo/hugo02-2018-09-28-template/</link>
      <pubDate>Fri, 28 Sep 2018 23:59:00 +0800</pubDate>
      
      <guid>http://panfeng0119.github.io/post/hugo/hugo02-2018-09-28-template/</guid>
      
        <description>

&lt;p&gt;Hugo 使用Go的 html/template 和 text/template. 详情请看&lt;a href=&#34;http://golang.org/pkg/html/template/&#34;&gt;Go docs&lt;/a&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;基本语法-basic-syntax&#34;&gt;&lt;strong&gt;基本语法 Basic Syntax&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;模板主要由 &lt;code&gt;variables&lt;/code&gt; 和 &lt;code&gt;functions&lt;/code&gt;组成，在 &lt;code&gt;{{ }}&lt;/code&gt; 内中使用&lt;/p&gt;

&lt;p&gt;访问变量&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;// 可以是当前作用域中已存在的变量
{{ .Title }}

// 或者自定义变量
{{ $address }}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;函数参数用空格分割&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;{{ FUNCTION ARG1 ARG2 .. }}

// 例如
{{ add 1 2 }}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;方法调用&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;// 方法和字段用&amp;#34;.&amp;#34;来访问
{{ .Params.bar }}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;用括号组织&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;{{ if or (isset .Params &amp;#34;alt&amp;#34;) (isset .Params &amp;#34;caption&amp;#34;) }} Caption {{ end }}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;变量&#34;&gt;&lt;strong&gt;变量&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;每个Go Template都会获取一个data对象。而在Hugo中，每个Template都传递一个Page&lt;/p&gt;

&lt;p&gt;&lt;code&gt;.Title&lt;/code&gt; 就是 &lt;a href=&#34;https://gohugo.io/variables/page/&#34;&gt;&lt;code&gt;Page&lt;/code&gt;&lt;/a&gt; 变量中可访问的元素之一，通过 &amp;ldquo;.&amp;rdquo; 访问：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&amp;lt;title&amp;gt;{{ .Title }}&amp;lt;/title&amp;gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;变量赋值&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;{{ $address := &amp;#34;123 Main St.&amp;#34; }}
{{ $address }}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;em&gt;下面的示例仅适用于 Hugov0.48 或更新的版本&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;在主页上打印“Var is Hugo Home”，在所有其他页面上打印“Var is Hugo Page”：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;{{ $var := &amp;#34;Hugo Page&amp;#34; }}
{{ if .IsHome }}
    {{ $var = &amp;#34;Hugo Home&amp;#34; }}
{{ end }}
Var is {{ $var }}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;函数&#34;&gt;&lt;strong&gt;函数&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;Hugo Template 的&lt;a href=&#34;https://gohugo.io/functions/&#34;&gt;自带函数&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;新的函数需要编译后才能使用&lt;/p&gt;

&lt;p&gt;Example 1: Adding Numbers&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;{{ add 1 2 }}
&amp;lt;!-- prints 3 --&amp;gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Example 2: Comparing Numbers&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;{{ lt 1 2 }}
&amp;lt;!-- prints true (i.e., since 1 is less than 2) --&amp;gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;这两个示例都使用了 &lt;a href=&#34;https://gohugo.io/functions/math/&#34;&gt;math functions&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;includes&#34;&gt;&lt;strong&gt;Includes&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;模板的位置从 &lt;code&gt;layouts/&lt;/code&gt; 目录开始&lt;/p&gt;

&lt;h2 id=&#34;partial-函数&#34;&gt;&lt;strong&gt;Partial 函数&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;用来调用 partial templates&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;// 使用方法
{{ partial &amp;#34;&amp;lt;PATH&amp;gt;/&amp;lt;PARTIAL&amp;gt;.&amp;lt;EXTENSION&amp;gt;&amp;#34; . }}

// 例如:  调用 layouts/partials/header.html partial
{{ partial &amp;#34;header.html&amp;#34; . }}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;template-函数&#34;&gt;&lt;strong&gt;Template 函数&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;仅用于调用 &lt;a href=&#34;https://gohugo.io/templates/internal/&#34;&gt;internal templates&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;可用模板在&lt;a href=&#34;https://github.com/gohugoio/hugo/tree/master/tpl/tplimpl/embedded/templates&#34;&gt;这里&lt;/a&gt;找&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;// 语法为
{{template“_internal / &amp;lt;TEMPLATE&amp;gt;.&amp;lt;EXTENSION&amp;gt;”. }}

// 例如： 调用 internal opengraph.html template:
{{ template &amp;#34;_internal/opengraph.html&amp;#34; . }}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;逻辑&#34;&gt;&lt;strong&gt;逻辑&lt;/strong&gt;&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;// Example 1: Using Context (.) 
{{ range $array }}
    {{ . }} &amp;lt;!--  . 表示 $array 中的一个元素 --&amp;gt;
{{ end }}

// Example 2: 给元素声明一个变量名
{{ range $elem_val := $array }}
    {{ $elem_val }}
{{ end }}

// Example 3: array 和 slice 的索引和变量
{{ range $elem_index, $elem_val := $array }}
   {{ $elem_index }} -- {{ $elem_val }}
{{ end }}
// Example 4: map 的 key 和 value
{{ range $elem_key, $elem_val := $map }}
   {{ $elem_key }} -- {{ $elem_val }}
{{ end }}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;条件语句&#34;&gt;&lt;strong&gt;条件语句&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;每个语句用 &lt;code&gt;{{ end }}&lt;/code&gt; 结束&lt;/p&gt;

&lt;p&gt;可以用到的关键字：&lt;code&gt;if&lt;/code&gt;, &lt;code&gt;else&lt;/code&gt;, &lt;code&gt;with&lt;/code&gt;, &lt;code&gt;or&lt;/code&gt;, &lt;code&gt;and&lt;/code&gt;, &lt;code&gt;range&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;作为 false 的值可以是：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;false (boolean)&lt;/li&gt;
&lt;li&gt;0 (integer)&lt;/li&gt;
&lt;li&gt;任何 zero-length array, slice, map, 或者 string&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;example-1-with&#34;&gt;Example 1: with&lt;/h3&gt;

&lt;p&gt;功能：如果变量存在，则&amp;hellip;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;// 如果变量不存在，或判定为 false 则跳过
{{ with .Params.title }}
    &amp;lt;h4&amp;gt;{{ . }}&amp;lt;/h4&amp;gt;
{{ end }}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h3 id=&#34;example-2-with-else&#34;&gt;Example 2: with .. else&lt;/h3&gt;

&lt;p&gt;如果设置了参数 &lt;code&gt;“description”&lt;/code&gt; 的值，执行&lt;code&gt;.&lt;/code&gt;命令&lt;/p&gt;

&lt;p&gt;否则使用&lt;code&gt;.Summary&lt;/code&gt;的变量值&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;{{ with .Param &amp;#34;description&amp;#34; }}
    {{ . }}
{{ else }}
    {{ .Summary }}
{{ end }}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h3 id=&#34;example-3-if&#34;&gt;Example 3: if&lt;/h3&gt;

&lt;p&gt;一种更长（冗余）的写法是用if，下面给出Example1重写的代码&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;{{ if isset .Params &amp;#34;title&amp;#34; }}
    &amp;lt;h4&amp;gt;{{ index .Params &amp;#34;title&amp;#34; }}&amp;lt;/h4&amp;gt;
{{ end }}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h3 id=&#34;example-4-if-else&#34;&gt;Example 4: if .. else&lt;/h3&gt;

&lt;p&gt;Below example is “Example 2” rewritten using if .. else, and using isset function + .Params variable (different from the .Param function) instead:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;{{ if (isset .Params &amp;#34;description&amp;#34;) }}
    {{ index .Params &amp;#34;description&amp;#34; }}
{{ else }}
    {{ .Summary }}
{{ end }}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Example 5: if .. else if .. else
Unlike with, if can contain else if clauses too.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;{{ if (isset .Params &amp;#34;description&amp;#34;) }}
    {{ index .Params &amp;#34;description&amp;#34; }}
{{ else if (isset .Params &amp;#34;summary&amp;#34;) }}
    {{ index .Params &amp;#34;summary&amp;#34; }}
{{ else }}
    {{ .Summary }}
{{ end }}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h3 id=&#34;example-6-and-or&#34;&gt;Example 6: and &amp;amp; or&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;{{ if (and (or (isset .Params &amp;#34;title&amp;#34;) (isset .Params &amp;#34;caption&amp;#34;)) (isset .Params &amp;#34;attr&amp;#34;)) }}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;未完待续&lt;/p&gt;

&lt;h2 id=&#34;管道符号-pipes&#34;&gt;&lt;strong&gt;管道符号（Pipes）&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;概念：每个管道（pipe）的输出都成为后续管道的输入&lt;/p&gt;

&lt;p&gt;限制：只能使用一个值作为传递参数&lt;/p&gt;

&lt;h3 id=&#34;example-1-shuffle&#34;&gt;Example 1: shuffle&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;//两条语句功能一样
{{ shuffle (seq 1 5) }}
{{ (seq 1 5) | shuffle }}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h3 id=&#34;example-2-index&#34;&gt;Example 2: index&lt;/h3&gt;

&lt;p&gt;以下访问名为“disqus_url”的页面参数并转义HTML。此示例还使用index函数，(内置在 Go Templates中)：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;{{ index .Params &amp;#34;disqus_url&amp;#34; | html }}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h3 id=&#34;example-3-or-with-isset&#34;&gt;Example 3: or with isset&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;{{ if or (or (isset .Params &amp;#34;title&amp;#34;) (isset .Params &amp;#34;caption&amp;#34;)) (isset .Params &amp;#34;attr&amp;#34;) }}
Stuff Here
{{ end }}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;改写为&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;{{ if isset .Params &amp;#34;caption&amp;#34; | or isset .Params &amp;#34;title&amp;#34; | or isset .Params &amp;#34;attr&amp;#34; }}
Stuff Here
{{ end }}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h3 id=&#34;example-4-internet-explorer-conditional-comments&#34;&gt;Example 4: Internet Explorer Conditional Comments&lt;/h3&gt;

&lt;p&gt;Go Templates 默认会删除HTML注释&lt;/p&gt;

&lt;p&gt;这有不幸的副作用是删除Internet Explorer条件注释。作为解决办法：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;{{ &amp;#34;&amp;lt;!--[if lt IE 9]&amp;gt;&amp;#34; | safeHTML }}
  &amp;lt;script src=&amp;#34;html5shiv.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt;
{{ &amp;#34;&amp;lt;![endif]--&amp;gt;&amp;#34; | safeHTML }}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;或者使用反勾号（`）来引用IE条件注释，避免转义内部每个双引号（&amp;rdquo;）的繁琐任务&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;{{ `&amp;lt;!--[if lt IE 7]&amp;gt;&amp;lt;html class=&amp;#34;no-js lt-ie9 lt-ie8 lt-ie7&amp;#34;&amp;gt;&amp;lt;![endif]--&amp;gt;` | safeHTML }}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr /&gt;

&lt;h2 id=&#34;context-aka-the-dot&#34;&gt;&lt;strong&gt;Context (aka “the dot”)&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;在最顶层，这是可用的数据集合
在迭代循环内，它具有当前值（.在循环内不会引用整个页面的数据）
如果需要访问页面数据，有以下方法&lt;/p&gt;

&lt;h3 id=&#34;1-定义一个变量&#34;&gt;1.定义一个变量&lt;/h3&gt;

&lt;p&gt;下面展示了如何定义变量&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;//tags-range-with-page-variable.html

{{ $title := .Site.Title }}
&amp;lt;ul&amp;gt;
{{ range .Params.tags }}
    &amp;lt;li&amp;gt;
        &amp;lt;a href=&amp;#34;/tags/{{ . | urlize }}&amp;#34;&amp;gt;{{ . }}&amp;lt;/a&amp;gt;
        - {{ $title }}
    &amp;lt;/li&amp;gt;
{{ end }}
&amp;lt;/ul&amp;gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;注意: 一旦我们进入循环（如 range），值{{.}}已更改。
由于已经在循环外部定义了一个变量（{{$title}}），并分配了一个值，因此我们也可以从循环内部访问该值。&lt;/p&gt;

&lt;h3 id=&#34;2-使用全局变量参数&#34;&gt;2.使用全局变量参数 $.&lt;/h3&gt;

&lt;p&gt;$.可以从任何地方访问全局上下文。&lt;/p&gt;

&lt;p&gt;使用$从全局上下文中获取.Site.Title：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;//range-through-tags-w-global.html

&amp;lt;ul&amp;gt;
{{ range .Params.tags }}
  &amp;lt;li&amp;gt;
    &amp;lt;a href=&amp;#34;/tags/{{ . | urlize }}&amp;#34;&amp;gt;{{ . }}&amp;lt;/a&amp;gt;
            - {{ $.Site.Title }}
  &amp;lt;/li&amp;gt;
{{ end }}
&amp;lt;/ul&amp;gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;如果重定义&lt;code&gt;$&lt;/code&gt;, &lt;code&gt;{{$：=.Site}}&lt;/code&gt;, 那么内置的&lt;code&gt;$&lt;/code&gt;将停止工作。您可以通过使用&lt;code&gt;{{$: =.}}&lt;/code&gt; 来将&lt;code&gt;$&lt;/code&gt;重置为其默认值。&lt;/p&gt;

&lt;h2 id=&#34;空白-whitespace&#34;&gt;&lt;strong&gt;空白（Whitespace）&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;使用连字符（hyphen, &amp;ldquo;-&amp;ldquo;）可以去掉空白（类似 trim），如&lt;code&gt;{{- XXXX -}}&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;可以去掉的有：
- 空格 （space）
- 当前行的Tab（horizontal tab）
- 回车（carriage return）
- 换行符 （newline）&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&amp;lt;div&amp;gt;
  {{ .Title }}
&amp;lt;/div&amp;gt;
&amp;lt;div&amp;gt;
  {{- .Title -}}
&amp;lt;/div&amp;gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;输出:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&amp;lt;div&amp;gt;
  Hello, World!
&amp;lt;/div&amp;gt;
&amp;lt;div&amp;gt;Hello, World!&amp;lt;/div&amp;gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;注释-comments&#34;&gt;&lt;strong&gt;注释（Comments）&lt;/strong&gt;&lt;/h2&gt;

&lt;h3 id=&#34;go-templates-的注释&#34;&gt;Go Templates 的注释&lt;/h3&gt;

&lt;p&gt;注释块用 &lt;code&gt;{{/*&lt;/code&gt; 和 &lt;code&gt;*/}}&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;html-注释&#34;&gt;HTML 注释&lt;/h3&gt;

&lt;p&gt;注释用 &lt;code&gt;&amp;lt;!--xxx --&amp;gt;&lt;/code&gt;
如果需要构造 html 注释块，可以用管道符导入到safeHTML&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;{{ printf &amp;#34;&amp;lt;!-- Our website is named: %s --&amp;gt;&amp;#34; .Site.Title | safeHTML }}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h3 id=&#34;包含go模板的html注释&#34;&gt;包含Go模板的HTML注释&lt;/h3&gt;

&lt;p&gt;不要用 HTML 注释来注释 GO 模板
引擎默认先编译 Go 模板代码，如果HTML注释中代码出错，编译就会失败。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&amp;lt;!-- {{ $author := &amp;#34;Emma Goldman&amp;#34; }} was a great woman. --&amp;gt;
{{ $author }}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;hugo-parameters&#34;&gt;&lt;strong&gt;Hugo Parameters&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;网页范围的参数配置，通过特定的内容片断来指定一些特定的渲染（如当前网站不需要用到的）传递到模板中&lt;/p&gt;

&lt;p&gt;You can define any values of any type and use them however you want in your templates, as long as the values are supported by the front matter format specified via metaDataFormat in your configuration file.&lt;/p&gt;

&lt;p&gt;您可以定义任何类型的值，并在模板中根据需要使用它们，只要这些值由配置文件中通过metaDataFormat指定的前置事项格式支持。&lt;/p&gt;

&lt;h3 id=&#34;使用content-page-参数&#34;&gt;使用Content (Page) 参数&lt;/h3&gt;

&lt;p&gt;全局都使用变量 notoc ，但有时我们不需要内容表。此时，我们在文件头设置为true，它将阻止内容表呈现。&lt;/p&gt;

&lt;p&gt;Here is the example front matter (YAML):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;---
title: Roadmap
lastmod: 2017-03-05
date: 2013-11-18
notoc: true
---&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;对应的模板中要加上处理的代码&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;//layouts/partials/toc.html

{{ if not .Params.notoc }}
&amp;lt;aside&amp;gt;
  &amp;lt;header&amp;gt;
    &amp;lt;a href=&amp;#34;#{{.Title | urlize}}&amp;#34;&amp;gt;
    &amp;lt;h3&amp;gt;{{.Title}}&amp;lt;/h3&amp;gt;
    &amp;lt;/a&amp;gt;
  &amp;lt;/header&amp;gt;
  {{.TableOfContents}}
&amp;lt;/aside&amp;gt;
&amp;lt;a href=&amp;#34;#&amp;#34; id=&amp;#34;toc-toggle&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;
{{ end }}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;We want the default behavior to be for pages to include a TOC unless otherwise specified. This template checks to make sure that the notoc: field in this page’s front matter is not true.
我们希望页面的默认行为包括TOC，除非另有指定。此模板检查以确保此页’s前端中的notoc:字段不正确。&lt;/p&gt;

&lt;h3 id=&#34;使用-全局参数-来判断代码块是否执行&#34;&gt;使用 全局参数 来判断代码块是否执行&lt;/h3&gt;

&lt;p&gt;这些参数在模板中是全局可用的。&lt;/p&gt;

&lt;p&gt;如：版权copyrighthtml这个内容，需要在全局使用&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;[params]
  copyrighthtml = &amp;#34;Copyright &amp;amp;#xA9; 2017 John Doe. All Rights Reserved.&amp;#34;
  sidebarrecentlimit = 5
  twitteruser = &amp;#34;spf13&amp;#34;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;然后，在页脚中声明一个&lt;code&gt;&amp;lt;footer&amp;gt;&lt;/code&gt;，只有当提供了copyrightml参数时才会呈现它。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;{{ if .Site.Params.copyrighthtml }}
    &amp;lt;footer&amp;gt;
        &amp;lt;div class=&amp;#34;text-center&amp;#34;&amp;gt;{{.Site.Params.CopyrightHTML | safeHTML}}&amp;lt;/div&amp;gt;
    &amp;lt;/footer&amp;gt;
{{ end }}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;或者用 &lt;code&gt;with&lt;/code&gt; 来替换 &lt;code&gt;if&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;// layouts/partials/twitter.html

{{ with .Site.Params.twitteruser }}
    &amp;lt;div&amp;gt;
        &amp;lt;a href=&amp;#34;https://twitter.com/{{.}}&amp;#34; rel=&amp;#34;author&amp;#34;&amp;gt;
        &amp;lt;img src=&amp;#34;/images/twitter.png&amp;#34; width=&amp;#34;48&amp;#34; height=&amp;#34;48&amp;#34; title=&amp;#34;Twitter: {{.}}&amp;#34; alt=&amp;#34;Twitter&amp;#34;&amp;gt;&amp;lt;/a&amp;gt;
    &amp;lt;/div&amp;gt;
{{ end }}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;layout 中可以使用“magic constants”&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&amp;lt;nav&amp;gt;
  &amp;lt;h1&amp;gt;Recent Posts&amp;lt;/h1&amp;gt;
  &amp;lt;ul&amp;gt;
  {{- range first .Site.Params.SidebarRecentLimit .Site.Pages -}}
      &amp;lt;li&amp;gt;&amp;lt;a href=&amp;#34;{{.RelPermalink}}&amp;#34;&amp;gt;{{.Title}}&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
  {{- end -}}
  &amp;lt;/ul&amp;gt;
&amp;lt;/nav&amp;gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h3 id=&#34;example-show-only-upcoming-events-只显示即将发生的事件&#34;&gt;Example: Show Only Upcoming Events 只显示即将发生的事件&lt;/h3&gt;

&lt;p&gt;Go allows you to do more than what’s shown here. Using Hugo’s &lt;code&gt;where function&lt;/code&gt; and Go built-ins, we can list only the items from content/events/ whose date (set in a content file’s front matter) is in the future. The following is an example partial template:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;layouts/partials/upcoming-events.html

&amp;lt;h4&amp;gt;Upcoming Events&amp;lt;/h4&amp;gt;
&amp;lt;ul class=&amp;#34;upcoming-events&amp;#34;&amp;gt;
{{ range where .Pages.ByDate &amp;#34;Section&amp;#34; &amp;#34;events&amp;#34; }}
    {{ if ge .Date.Unix now.Unix }}
        &amp;lt;li&amp;gt;
        &amp;lt;!-- add span for event type --&amp;gt;
          &amp;lt;span&amp;gt;{{ .Type | title }} —&amp;lt;/span&amp;gt;
          {{ .Title }} on
        &amp;lt;!-- add span for event date --&amp;gt;
          &amp;lt;span&amp;gt;{{ .Date.Format &amp;#34;2 January at 3:04pm&amp;#34; }}&amp;lt;/span&amp;gt;
          at {{ .Params.place }}
        &amp;lt;/li&amp;gt;
    {{ end }}
{{ end }}
&amp;lt;/ul&amp;gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://gohugo.io/templates/introduction/#basic-syntax&#34;&gt;https://gohugo.io/templates/introduction/#basic-syntax&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>Hugo 01 | Documentation</title>
      <link>http://panfeng0119.github.io/post/hugo/hugo01-2018-09-28-documentation/</link>
      <pubDate>Fri, 28 Sep 2018 00:00:00 +0800</pubDate>
      
      <guid>http://panfeng0119.github.io/post/hugo/hugo01-2018-09-28-documentation/</guid>
      
        <description>

&lt;h1 id=&#34;introduction-to-hugo-templating-https-gohugo-io-templates-introduction&#34;&gt;&lt;a href=&#34;https://gohugo.io/templates/introduction/&#34;&gt;Introduction to Hugo Templating&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;Hugo 使用Go语言的 &lt;code&gt;html/template&lt;/code&gt; and &lt;code&gt;text/template&lt;/code&gt; 库作为模板.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h1 id=&#34;content-organization-https-gohugo-io-content-management-organization&#34;&gt;&lt;a href=&#34;https://gohugo.io/content-management/organization/&#34;&gt;Content Organization&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;Hugo认为相同的结构体用来组织源内容，同样用来渲染站点。&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h1 id=&#34;hugo-s-lookup-order&#34;&gt;Hugo&amp;rsquo;s Lookup Order&lt;/h1&gt;

&lt;p&gt;Hugo searches for the layout to use for a given page in a well defined order, starting from the most specific.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h1 id=&#34;base-templates-and-blocks&#34;&gt;Base Templates and Blocks&lt;/h1&gt;

&lt;p&gt;The base and block constructs allow you to define the outer shell of your master templates (i.e., the chrome of the page).&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h1 id=&#34;install-hugo&#34;&gt;Install Hugo&lt;/h1&gt;

&lt;p&gt;Install Hugo on macOS, Windows, Linux, OpenBSD, FreeBSD, and on any machine where the Go compiler tool chain can run.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h1 id=&#34;directory-structure&#34;&gt;Directory Structure&lt;/h1&gt;

&lt;p&gt;Hugo’s CLI scaffolds a project directory structure and then takes that single directory and uses it as the input to create a complete website.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h1 id=&#34;code-toggle&#34;&gt;Code Toggle&lt;/h1&gt;

&lt;p&gt;Code Toggle tryout and showcase.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h1 id=&#34;configure-hugo&#34;&gt;Configure Hugo&lt;/h1&gt;

&lt;p&gt;How to configure your Hugo site.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h1 id=&#34;comments&#34;&gt;Comments&lt;/h1&gt;

&lt;p&gt;Hugo ships with an internal Disqus template, but this isn’t the only commenting system that will work with your new Hugo website.&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>Go_design_pattern</title>
      <link>http://panfeng0119.github.io/post/design-pattern/designpattern-2018-09-26-principle/</link>
      <pubDate>Wed, 26 Sep 2018 00:13:42 +0800</pubDate>
      
      <guid>http://panfeng0119.github.io/post/design-pattern/designpattern-2018-09-26-principle/</guid>
      
        <description>

&lt;h2 id=&#34;设计模式的六大原则&#34;&gt;设计模式的六大原则&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://studygolang.com/articles/9440&#34;&gt;原文&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;1-开闭原则-open-close-principle&#34;&gt;1、开闭原则（Open Close Principle）&lt;/h3&gt;

&lt;p&gt;对扩展开放，对修改关闭。
在程序需要进行拓展的时候，不能去修改原有的代码，实现一个热插拔的效果。
所以一句话概括就是：为了使程序的扩展性好，易于维护和升级。
想要达到这样的效果，我们需要使用接口和抽象类。&lt;/p&gt;

&lt;h3 id=&#34;2-里氏代换原则-liskov-substitution-principle&#34;&gt;2、里氏代换原则（Liskov Substitution Principle）&lt;/h3&gt;

&lt;p&gt;里氏代换原则(Liskov Substitution Principle LSP)面向对象设计的基本原则之一。 里氏代换原则中说，任何 基类可以出现的地方，子类一定可以出现。 LSP是继承复用的基石，只有当衍生类可以替换掉基类，软件单位的功能不受 到影响时，基类才能真正被复用，而衍生类也能够在基类的基础上增加新的行为。里氏代换原则是对“开-闭”原则的补充。 实现“开-闭”原则的关键步骤就是抽象化。而基类与子类的继承关系就是抽象化的具体实现，所以里氏代换原则是对实现抽 象化的具体步骤的规范。—— From Baidu 百科&lt;/p&gt;

&lt;p&gt;3、依赖倒转原则（Dependence Inversion Principle）&lt;/p&gt;

&lt;p&gt;这个是开闭原则的基础，具体内容：真对接口编程，依赖于抽象而不依赖于具体。&lt;/p&gt;

&lt;p&gt;4、接口隔离原则（Interface Segregation Principle）&lt;/p&gt;

&lt;p&gt;这个原则的意思是：使用多个隔离的接口，比使用单个接口要好。还是一个降低类之间的耦合度的意思，从这儿我们看出， 其实设计模式就是一个软件的设计思想，从大型软件架构出发，为了升级和维护方便。所以上文中多次出现：降低依赖，降低耦合。&lt;/p&gt;

&lt;p&gt;5、迪米特法则（最少知道原则）（Demeter Principle）&lt;/p&gt;

&lt;p&gt;为什么叫最少知道原则，就是说：一个实体应当尽量少的与其他实体之间发生相互作用，使得系统功能模块相对独立。&lt;/p&gt;

&lt;p&gt;6、合成复用原则（Composite Reuse Principle）&lt;/p&gt;

&lt;p&gt;原则是尽量使用合成/聚合的方式，而不是使用继承。&lt;/p&gt;

&lt;p&gt;实现代码
&lt;a href=&#34;https://github.com/BPing/golang_design_pattern/tree/master/pattern&#34;&gt;https://github.com/BPing/golang_design_pattern/tree/master/pattern&lt;/a&gt;
创建型 C
结构型 J
行为型 X&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;AbstractFactory.go : 抽象工厂模式(C)&lt;/li&gt;
&lt;li&gt;Adapter.go : 适配器模式(J)&lt;/li&gt;
&lt;li&gt;Bridge.go : 桥接模式(J)&lt;/li&gt;
&lt;li&gt;Builder.go : 建造者模式(C)&lt;/li&gt;
&lt;li&gt;ChainOfResponsibility.go : 责任链模式(X)&lt;/li&gt;
&lt;li&gt;Command.go : 命令模式(X)&lt;/li&gt;
&lt;li&gt;Composite.go : 组合模式(J)&lt;/li&gt;
&lt;li&gt;Decorator.go : 装饰器模式(J)&lt;/li&gt;
&lt;li&gt;Facade.go : 外观模式(J)&lt;/li&gt;
&lt;li&gt;Factory.go : 工厂模式(C)&lt;/li&gt;
&lt;li&gt;Flyweight.go : 享元模式(J)&lt;/li&gt;
&lt;li&gt;Interpreter.go : 解释器模式(X)&lt;/li&gt;
&lt;li&gt;Iterator.go : 迭代器模式(X)&lt;/li&gt;
&lt;li&gt;Mediator.go : 中介者模式(X)&lt;/li&gt;
&lt;li&gt;Memento.go : 备忘录模式(X)&lt;/li&gt;
&lt;li&gt;Observer.go : 观察者模式(X)&lt;/li&gt;
&lt;li&gt;Prototype.go : 原型模式(C)&lt;/li&gt;
&lt;li&gt;Proxy.go : 代理模式(J)&lt;/li&gt;
&lt;li&gt;Singleton.go : 单例模式(C)&lt;/li&gt;
&lt;li&gt;Singleton2.go : 单例模式(C)&lt;/li&gt;
&lt;li&gt;State.go : 状态模式(X)&lt;/li&gt;
&lt;li&gt;Strategy.go : 策略模式(X)&lt;/li&gt;
&lt;li&gt;Template.go : 模板模式(X)&lt;/li&gt;
&lt;li&gt;Visitor.go : 访问者模式(X)&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
    <item>
      <title>设计模式：工厂模式（Factory Pattern）</title>
      <link>http://panfeng0119.github.io/post/design-pattern/designpattern-2018-09-26-factory/</link>
      <pubDate>Wed, 26 Sep 2018 00:00:00 +0800</pubDate>
      
      <guid>http://panfeng0119.github.io/post/design-pattern/designpattern-2018-09-26-factory/</guid>
      
        <description>

&lt;p&gt;工厂模式（Factory Pattern）&lt;/p&gt;

&lt;h3 id=&#34;类型&#34;&gt;类型&lt;/h3&gt;

&lt;p&gt;创建型模式&lt;/br&gt;
提供了一种创建对象的最佳方式&lt;/p&gt;

&lt;p&gt;意图：定义一个接口，让其子类自己决定实例化哪一个工厂类，工厂模式使其创建过程延迟到子类进行。&lt;/p&gt;

&lt;p&gt;主要解决：主要解决接口选择的问题。&lt;/p&gt;

&lt;p&gt;何时使用：我们明确地计划不同条件下创建不同实例时。&lt;/p&gt;

&lt;p&gt;如何解决：让其子类实现工厂接口，返回的也是一个抽象的产品。&lt;/p&gt;

&lt;p&gt;关键代码：创建过程在其子类执行。&lt;/p&gt;

&lt;p&gt;应用实例： 1、您需要一辆汽车，可以直接从工厂里面提货，而不用去管这辆汽车是怎么做出来的，以及这个汽车里面的具体实现。 2、Hibernate 换数据库只需换方言和驱动就可以。&lt;/p&gt;

&lt;p&gt;1. 我们需要一个接口&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;type Shape interface {
	Draw()
}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;2. 这个接口下的实例&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;// 实例1
type Rectangle struct {
}

func (this Rectangle) Draw() {
	fmt.Println(&amp;#34;Inside Rectangle::draw() method.&amp;#34;)
}

// 实例2
type Square struct {
}

func (this Square) Draw() {
	fmt.Println(&amp;#34;Inside Square ::draw() method.&amp;#34;)
}

// 实例3
type Circle struct {
}

func (this Circle) Draw() {
	fmt.Println(&amp;#34;Inside Circle  ::draw() method.&amp;#34;)
}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;3. 创建一个工厂&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;type ShapeFactory struct {
}

//使用 getShape 方法获取形状类型的对象
func (this ShapeFactory) getShape(shapeType string) Shape {

	if shapeType == &amp;#34;&amp;#34; {
		return nil
	}
	if shapeType == &amp;#34;CIRCLE&amp;#34; {
		return Circle{}
	} else if shapeType == &amp;#34;RECTANGLE&amp;#34; {
		return Rectangle{}
	} else if shapeType == &amp;#34;SQUARE&amp;#34; {
		return Square{}
	}
	return nil
}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;4. 使用这个工厂&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;func main() {
	factory := ShapeFactory{}
	factory.getShape(&amp;#34;CIRCLE&amp;#34;).Draw()
	factory.getShape(&amp;#34;RECTANGLE&amp;#34;).Draw()
	factory.getShape(&amp;#34;SQUARE&amp;#34;).Draw()
}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;结果&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;Inside Circle  ::draw() method.
Inside Rectangle::draw() method.
Inside Square ::draw() method.&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
      
    </item>
    
    <item>
      <title>Hugo &#43; GitHub 部署个人站点</title>
      <link>http://panfeng0119.github.io/post/hugo/hugo-2018-09-15-host-on-github/</link>
      <pubDate>Sat, 15 Sep 2018 00:00:00 +0800</pubDate>
      
      <guid>http://panfeng0119.github.io/post/hugo/hugo-2018-09-15-host-on-github/</guid>
      
        <description>

&lt;p&gt;完整内容请参阅 &lt;a href=&#34;https://gohugo.io/hosting-and-deployment/&#34;&gt;Hosting &amp;amp; Deployment&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;我们可以将 Hugo 生成的站点托管在 GitHub Pages 上，并使用简单的shell脚本自动完成整个过程。假设您已完成：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;已安装 &lt;a href=&#34;https://git-scm.com/downloads&#34;&gt;Git&lt;/a&gt; 版本 2.8 以上.&lt;/li&gt;
&lt;li&gt;需要发布的Hugo网站，起码已完成&lt;a href=&#34;https://gohugo.io/getting-started/quick-start/&#34;&gt;快速入门&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;在 &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt; 中创建好了仓库: &amp;lt;USERNAME&amp;gt;.github.io.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;b-准备工作-b&#34;&gt;&lt;b&gt;准备工作&lt;/b&gt;&lt;/h2&gt;

&lt;p&gt;不同的仓库类型，需要托管的分支是不同的。具体描述，请参阅文档 &lt;a href=&#34;https://help.github.com/articles/user-organization-and-project-pages/#user--organization-pages&#34;&gt;GitHub Pages doc&lt;/a&gt;，以确定您要创建哪种类型的站点.&lt;/p&gt;

&lt;p&gt;从逻辑上，常用两种类型的仓库，对应的分支为&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;&lt;code&gt;https://github.com/&amp;lt;USERNAME&amp;gt;/&amp;lt;USERNAME&amp;gt;.github.io&lt;/code&gt;&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;&lt;code&gt;https://&amp;lt;USERNAME&amp;gt;.github.io&lt;/code&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;网站分支 -&amp;gt; &lt;font face=&#34;Aria&#34;&gt;&lt;b&gt;gh-pages&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;网站分支 -&amp;gt; &lt;font face=&#34;Aria&#34;&gt;&lt;b&gt;master&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;源码分支 -&amp;gt; &lt;font face=&#34;微软雅黑&#34;&gt;&lt;b&gt;任意&lt;/b&gt; &lt;/font&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;源码分支 -&amp;gt; &lt;font face=&#34;微软雅黑&#34;&gt;&lt;b&gt;任意&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;我们用第二种类型，需要注意两点：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;仓库名必须用&amp;lt;USERNAME&amp;gt;.github.io &lt;br&gt;&lt;/li&gt;
&lt;li&gt;网站内容必须存放在 master 分支&lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;一-b-通过两个仓库来创建-github-pages-b&#34;&gt;一、&lt;b&gt;通过两个仓库来创建 GitHub Pages&lt;/b&gt;&lt;/h2&gt;

&lt;p&gt;最简单的方法就是将 Hugo 文件和生成的内容分别发布到两个不同的仓库(Repositoriy)中。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;创建两个仓库 &lt;p&gt; 一个存放源码的仓库： &lt;code&gt;&amp;lt;YOUR-PROJECT&amp;gt;&lt;/code&gt;  &lt;font color=#F08080&gt;（如：blog）&lt;/font&gt; &lt;/br&gt; 一个托管Hugo网站的仓库： &lt;code&gt;&amp;lt;USERNAME&amp;gt;.github.io&lt;/code&gt; &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;克隆源码仓库到本地 &lt;p&gt; git clone &amp;lt;OUR-PROJECT-URL&amp;gt; &lt;/br&gt; cd &amp;lt;YOUR-PROJECT&amp;gt; &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;启动网站服务，确保网站能正常运行 &lt;p&gt; hugo server &lt;/br&gt; 访问网站 &lt;a href=&#34;http://localhost:1313&#34;&gt;http://localhost:1313&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;创建 git 子模块，命名为 &lt;em&gt;public&lt;/em&gt; &lt;font color=#F08080&gt;（用来托管网站）&lt;/font&gt; &lt;p&gt; git submodule add -b master &lt;code&gt;git@github.com:&amp;lt;USERNAME&amp;gt;/&amp;lt;USERNAME&amp;gt;.github.io.git public&lt;/code&gt; &lt;em&gt;public&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;运行脚本，将网站 push 到&lt;code&gt;&amp;lt;USERNAME&amp;gt;.github.io&lt;/code&gt; &lt;p&gt; chmod +x deploy.sh  ./deploy.sh&amp;rdquo;提交消息(可选)&amp;rdquo; &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;将源代码 push 到 &lt;code&gt;&amp;lt;YOUR-PROJECT&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#!/bin/bash
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# 文件名：deploy.sh&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; -e &lt;span class=&#34;s2&#34;&gt;&amp;#34;\033[0;32mDeploying updates to GitHub...\033[0m&amp;#34;&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;Date&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;date &lt;span class=&#34;s2&#34;&gt;&amp;#34;+%Y-%m-%d %H:%M:%S&amp;#34;&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# Build the project.&lt;/span&gt;
hugo

&lt;span class=&#34;c1&#34;&gt;# Go To Public folder&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; public

&lt;span class=&#34;c1&#34;&gt;# Add changes to git.&lt;/span&gt;
git add -A

&lt;span class=&#34;c1&#34;&gt;# Commit changes.&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;msg&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;rebuilding site &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;Date&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$#&lt;/span&gt; -eq &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;then&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;msg&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$1&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt;
git commit -m &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$msg&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# Push source and build repos.&lt;/span&gt;
git push origin master

&lt;span class=&#34;c1&#34;&gt;# Come Back up to the Project Root&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; ..&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;现在！您的个人页面成功地部署在 &lt;code&gt;https://&amp;lt;USERNAME&amp;gt;.github.io&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;font color=#778899&gt;补充：如果需要指定 Hugo 生成网站的输出目录，可以在配置文件中 config.toml 中设置变量 publishDir = &#34;docs&#34;. &lt;/font&gt;&lt;/p&gt;

&lt;h2 id=&#34;二-b-通过两个分支来创建-github-pages-b&#34;&gt;二、&lt;b&gt;通过两个分支来创建 GitHub Pages&lt;/b&gt;&lt;/h2&gt;

&lt;p&gt;我们还可以指定默认分支来托管源代码，并将发布的站点指向单独的分支，虽然比上面的方法复杂，但他的优点在于：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;只用一个仓库，方便维护和版本控制&lt;/li&gt;
&lt;li&gt;直接使用默认的 &lt;em&gt;public&lt;/em&gt; 目录，不必指定 Git 子模块或输出目录&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;我们需要到仓库中新建一个托管源代码的分支，并设置为默认分支&lt;font color=#F08080&gt;（非 master 分支）&lt;/font&gt;，设置方法如下&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;进入仓库 &lt;code&gt;https://&amp;lt;USERNAME&amp;gt;.github.io&lt;/code&gt; ，点击导航栏的设置 &lt;font face=&#34;woff2&#34;&gt;&lt;strong&gt;Settings&lt;/strong&gt;&lt;font&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;在左侧 &lt;font face=&#34;woff2&#34;&gt;&lt;strong&gt;Options&lt;/strong&gt;&lt;font&gt; 找到 &lt;font face=&#34;woff2&#34;&gt;&lt;strong&gt;Branches&lt;/strong&gt;&lt;font&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;font face=&#34;woff2&#34;&gt;&lt;strong&gt;Default branch&lt;/strong&gt;&lt;font&gt; 选择源码托管的分支 &lt;font color=#F08080&gt;（如 hugo）&lt;/font&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;2-1-初始化&#34;&gt;2.1 初始化&lt;/h3&gt;

&lt;p&gt;接下来的步骤在每次 clone 下来后只需要完成一次。默认的 &lt;code&gt;（upstream&lt;/code&gt; 的名称 origin
&lt;font color=#F08080&gt;（upstream 是远程仓库在本地的简写名称，可以通过 git remote -v 来查看 ）&lt;/font&gt;&lt;/p&gt;

&lt;p&gt;现在，我们用 &lt;code&gt;https://&amp;lt;USERNAME&amp;gt;.github.io&lt;/code&gt; 仓库，源码分支为 &lt;strong&gt;hugo&lt;/strong&gt; ，发布网站的分支为 &lt;strong&gt;master&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;克隆仓库到本地，默认分支是 &lt;strong&gt;hugo&lt;/strong&gt; &lt;p&gt; git clone &amp;lt;Repositoriy-URL&amp;gt; &lt;/br&gt; cd &amp;lt;Repositoriy&amp;gt; &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;切换到 &lt;strong&gt;master&lt;/strong&gt; 分支，进行设置 &lt;p&gt;
git checkout master &lt;/br&gt;
git reset &amp;ndash;hard &lt;/br&gt;
git commit &amp;ndash;allow-empty -m &amp;ldquo;Initializing master branch&amp;rdquo; &lt;/br&gt;
git push origin master&lt;/br&gt;
git checkout master &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;切换到 &lt;strong&gt;hugo&lt;/strong&gt; 分支&lt;p&gt;
echo public &amp;gt;&amp;gt; .gitignore &lt;/br&gt;
rm -rf public&lt;/br&gt;
rm -rf .git/worktrees/public/&amp;rdquo; &lt;/br&gt;
git worktree add -B master public origin/master &lt;/br&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;2-2-启动服务并push到分支&#34;&gt;2.2 启动服务并push到分支&lt;/h3&gt;

&lt;p&gt;现在我们只需要启动服务，检查网站正常运行，就可以通过脚本来push了  &lt;font color=#F08080&gt;（脚本需要 chmod +x deploy.sh）&lt;/font&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#!/bin/bash
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;# 文件名：deploy.sh&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# 脚本：自动将public文件夹push到master分支&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# 如果是用 gh-branch，将 master 替换为 gh-branch 就可以&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# 日志信息&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;Date&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;date &lt;span class=&#34;s2&#34;&gt;&amp;#34;+%Y-%m-%d %H:%M:%S&amp;#34;&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;alias&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;printlog&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;echo ${Date} INFO&amp;#39;&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# 标记当前路径&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;DIR&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;pwd&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;
printlog &lt;span class=&#34;s2&#34;&gt;&amp;#34;当前目录：&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;DIR&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;

printlog &lt;span class=&#34;s2&#34;&gt;&amp;#34;标记 public 文件夹为 master 分支&amp;#34;&lt;/span&gt;
rm -rf public
rm -rf .git/worktrees/public/

git worktree add -B master public origin/master
&lt;span class=&#34;c1&#34;&gt;# 清除原来的内容&lt;/span&gt;
rm -rf public/*

&lt;span class=&#34;c1&#34;&gt;# 编译&lt;/span&gt;
printlog &lt;span class=&#34;s2&#34;&gt;&amp;#34;正在生成网站.&amp;#34;&lt;/span&gt;
hugo

printlog &lt;span class=&#34;s2&#34;&gt;&amp;#34;正在提交更新&amp;#34;&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;msg&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Rebuilding site &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;Date&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; (publish.sh)&amp;#34;&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# 提交&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; public &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; git add --all &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; git commit -m &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;msg&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;

printlog &lt;span class=&#34;s2&#34;&gt;&amp;#34;正在 push&amp;#34;&lt;/span&gt;
git push origin master

printlog &lt;span class=&#34;s2&#34;&gt;&amp;#34;Down!&amp;#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;hr /&gt;

&lt;h3 id=&#34;附录&#34;&gt;附录&lt;/h3&gt;

&lt;p&gt;知识点：&lt;/p&gt;

&lt;p&gt;git worktree&lt;/p&gt;

&lt;p&gt;利用 upstream 标记更多的远程仓库地址&lt;/p&gt;

&lt;p&gt;脚本中获取相对路径 DIR=$(dirname &amp;ldquo;$0&amp;rdquo;)&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>LeetCode 刷题笔记</title>
      <link>http://panfeng0119.github.io/post/leetcode/leetcode-2018-09-14-1-to-100/</link>
      <pubDate>Fri, 14 Sep 2018 00:00:00 +0800</pubDate>
      
      <guid>http://panfeng0119.github.io/post/leetcode/leetcode-2018-09-14-1-to-100/</guid>
      
        <description>

&lt;p&gt;&lt;a href=&#34;https://gohugo.io/categories/content-management&#34;&gt;CONTENT MANAGEMENT&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;1-two-sum&#34;&gt;1. Two Sum&lt;/h1&gt;

&lt;p&gt;Given an array of integers, return indices of the two numbers such that they add up to a specific target.&lt;/p&gt;

&lt;p&gt;You may assume that each input would have exactly one solution, and you may not use the same element twice.&lt;/p&gt;

&lt;p&gt;Example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;Given nums = [2, 7, 11, 15], target = 9,

Because nums[0] + nums[1] = 2 + 7 = 9,
return [0, 1].&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;思路&#34;&gt;思路&lt;/h2&gt;

&lt;p&gt;考虑时间复杂度， 按正常思路遍历是 &lt;code&gt;O(n^2)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;所以需要一个map来记录遍历过的值，key 用 &lt;code&gt;target - n&lt;/code&gt; 来表示这个数需要匹配的数，value 记录这个位置&lt;/p&gt;

&lt;p&gt;如果找到这个值，就直接返回他的value&lt;/p&gt;

&lt;h2 id=&#34;代码&#34;&gt;代码&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;func twoSum(nums []int, target int) []int {
    m := make(map[int]int)
    for i, n := range nums {
        _, prs := m[n]
        if prs {
            return []int{m[n], i}
        } else {
            m[target-n] = i
        }
    }
    return nil;
}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h1 id=&#34;2-two-sum&#34;&gt;2. Two Sum&lt;/h1&gt;

&lt;p&gt;Given an array of integers, return indices of the two numbers such that they add up to a specific target.&lt;/p&gt;

&lt;p&gt;You may assume that each input would have exactly one solution, and you may not use the same element twice.&lt;/p&gt;

&lt;p&gt;Example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;Given nums = [2, 7, 11, 15], target = 9,

Because nums[0] + nums[1] = 2 + 7 = 9,
return [0, 1].&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;思路-1&#34;&gt;思路&lt;/h2&gt;

&lt;p&gt;考虑时间复杂度， 按正常思路遍历是 &lt;code&gt;O(n^2)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;所以需要一个map来记录遍历过的值，key 用 &lt;code&gt;target - n&lt;/code&gt; 来表示这个数需要匹配的数，value 记录这个位置&lt;/p&gt;

&lt;p&gt;如果找到这个值，就直接返回他的value&lt;/p&gt;

&lt;h2 id=&#34;代码-1&#34;&gt;代码&lt;/h2&gt;
</description>
      
    </item>
    
  </channel>
</rss>